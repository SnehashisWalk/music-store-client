[{"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\index.js":"1","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\App.js":"2","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\HomeBar.js":"3","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\TopBar.js":"4","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\MyCarousel\\MyCarousel.js":"5","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\MyCarousel\\CarouselData.js":"6","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Categories\\Categories.js":"7","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Brands\\Brands.js":"8","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Footer\\Footer.js":"9","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Home.js":"10","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\Routes.js":"11","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\Guitars.js":"12","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Keyboards\\Keyboards.js":"13","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Drums\\Drums.js":"14","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\SignIn.js":"15","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\SignUp.js":"16","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\auth\\helper\\index.js":"17","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\backend.js":"18","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\auth\\helper\\AdminRoutes.js":"19","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\auth\\helper\\PrivateRoutes.js":"20","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\Profile.js":"21","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\coreapicalls.js":"22","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\imageapicalls.js":"23","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\Cart.js":"24","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\CartUtility.js":"25","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\cartUtility.js":"26","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\CartItem.js":"27","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\StripeCheckout.js":"28","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\orderhelper.js":"29","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\RazorpayCheckout.js":"30","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\CreateCategories.js":"31","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\ManageCategories.js":"32","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\CreateProducts.js":"33","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\ManageProducts.js":"34","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\ManageOrders.js":"35","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\helper\\adminapicalls.js":"36","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Brands\\BrandsData.js":"37","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\ElectricGuitars.js":"38","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\AcousticGuitars.js":"39","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\BassGuitars.js":"40","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Pianos\\Pianos.js":"41","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Microphones\\Microphones.js":"42","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Softwares\\Softwares.js":"43","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Headphones\\Headphones.js":"44","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Amplifiers\\Amplifiers.js":"45","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Bluetooth Speakers\\BluetoothSpeakers.js":"46","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\DJ Gear\\DJGear.js":"47","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\helper\\userUtility.js":"48","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\checkout\\Checkout.js":"49","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\index.js":"50","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\App.js":"51","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\Routes.js":"52","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\user\\SignUp.js":"53","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\user\\SignIn.js":"54","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Guitars\\AcousticGuitars.js":"55","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\cart\\Cart.js":"56","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Guitars\\BassGuitars.js":"57","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Keyboards\\Keyboards.js":"58","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\checkout\\Checkout.js":"59","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Headphones\\Headphones.js":"60","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Guitars\\ElectricGuitars.js":"61","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Microphones\\Microphones.js":"62","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Guitars\\Guitars.js":"63","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Pianos\\Pianos.js":"64","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Softwares\\Softwares.js":"65","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Amplifiers\\Amplifiers.js":"66","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\user\\Profile.js":"67","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Drums\\Drums.js":"68","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\auth\\helper\\PrivateRoutes.js":"69","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\Home.js":"70","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\auth\\helper\\AdminRoutes.js":"71","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Bluetooth Speakers\\BluetoothSpeakers.js":"72","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\DJ Gear\\DJGear.js":"73","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\auth\\helper\\index.js":"74","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\cart\\cartUtility.js":"75","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\HomeBar.js":"76","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\TopBar.js":"77","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\helper\\imageapicalls.js":"78","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\helper\\orderhelper.js":"79","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\helper\\coreapicalls.js":"80","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\MyCarousel\\MyCarousel.js":"81","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\cart\\CartItem.js":"82","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\Footer\\Footer.js":"83","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\Brands\\Brands.js":"84","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\Categories\\Categories.js":"85","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\user\\helper\\userUtility.js":"86","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\admin\\ManageOrders.js":"87","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\admin\\CreateCategories.js":"88","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\admin\\CreateProducts.js":"89","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\admin\\ManageCategories.js":"90","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\admin\\ManageProducts.js":"91","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\backend.js":"92","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\MyCarousel\\CarouselData.js":"93","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\Brands\\BrandsData.js":"94","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\admin\\helper\\adminapicalls.js":"95"},{"size":201,"mtime":1614634159742,"results":"96","hashOfConfig":"97"},{"size":198,"mtime":1614634181831,"results":"98","hashOfConfig":"97"},{"size":167,"mtime":1614800870679,"results":"99","hashOfConfig":"97"},{"size":12503,"mtime":1616195808813,"results":"100","hashOfConfig":"97"},{"size":3366,"mtime":1616195757616,"results":"101","hashOfConfig":"97"},{"size":1743,"mtime":1614757549564,"results":"102","hashOfConfig":"97"},{"size":6890,"mtime":1616195568134,"results":"103","hashOfConfig":"97"},{"size":729,"mtime":1614803032590,"results":"104","hashOfConfig":"97"},{"size":2359,"mtime":1616195629536,"results":"105","hashOfConfig":"97"},{"size":549,"mtime":1614635541083,"results":"106","hashOfConfig":"97"},{"size":3403,"mtime":1616196323084,"results":"107","hashOfConfig":"97"},{"size":7788,"mtime":1616015992883,"results":"108","hashOfConfig":"97"},{"size":6962,"mtime":1616196697014,"results":"109","hashOfConfig":"97"},{"size":6946,"mtime":1616196573839,"results":"110","hashOfConfig":"97"},{"size":4430,"mtime":1616196174037,"results":"111","hashOfConfig":"97"},{"size":4015,"mtime":1616196217471,"results":"112","hashOfConfig":"97"},{"size":1354,"mtime":1616196906675,"results":"113","hashOfConfig":"97"},{"size":51,"mtime":1612908051565,"results":"114","hashOfConfig":"97"},{"size":524,"mtime":1612983911997,"results":"115","hashOfConfig":"97"},{"size":487,"mtime":1612984037238,"results":"116","hashOfConfig":"97"},{"size":23759,"mtime":1616196397767,"results":"117","hashOfConfig":"97"},{"size":230,"mtime":1614421512201,"results":"118","hashOfConfig":"97"},{"size":227,"mtime":1613254851179,"results":"119","hashOfConfig":"97"},{"size":6541,"mtime":1616194632346,"results":"120","hashOfConfig":"97"},{"size":3033,"mtime":1613672248741,"results":"121","hashOfConfig":"122"},{"size":5194,"mtime":1616196879320,"results":"123","hashOfConfig":"97"},{"size":4424,"mtime":1616194669867,"results":"124","hashOfConfig":"97"},{"size":2855,"mtime":1615217269495,"results":"125","hashOfConfig":"122"},{"size":722,"mtime":1616196833984,"results":"126","hashOfConfig":"97"},{"size":2744,"mtime":1614420232044,"results":"127","hashOfConfig":"122"},{"size":8293,"mtime":1615498884106,"results":"128","hashOfConfig":"97"},{"size":15650,"mtime":1616194559719,"results":"129","hashOfConfig":"97"},{"size":7999,"mtime":1616194524611,"results":"130","hashOfConfig":"97"},{"size":1035,"mtime":1615512491072,"results":"131","hashOfConfig":"97"},{"size":480,"mtime":1614425407501,"results":"132","hashOfConfig":"97"},{"size":1775,"mtime":1616124739126,"results":"133","hashOfConfig":"97"},{"size":3315,"mtime":1614795771529,"results":"134","hashOfConfig":"97"},{"size":6988,"mtime":1616196626685,"results":"135","hashOfConfig":"97"},{"size":6988,"mtime":1616015889153,"results":"136","hashOfConfig":"97"},{"size":6972,"mtime":1616015917452,"results":"137","hashOfConfig":"97"},{"size":6952,"mtime":1616196744100,"results":"138","hashOfConfig":"97"},{"size":6970,"mtime":1616196722907,"results":"139","hashOfConfig":"97"},{"size":6964,"mtime":1616196759509,"results":"140","hashOfConfig":"97"},{"size":6966,"mtime":1616196676770,"results":"141","hashOfConfig":"97"},{"size":6966,"mtime":1616196436228,"results":"142","hashOfConfig":"97"},{"size":6996,"mtime":1616196526486,"results":"143","hashOfConfig":"97"},{"size":6952,"mtime":1616196551532,"results":"144","hashOfConfig":"97"},{"size":898,"mtime":1616133254928,"results":"145","hashOfConfig":"97"},{"size":18720,"mtime":1616195533219,"results":"146","hashOfConfig":"97"},{"size":201,"mtime":1614634159742,"results":"147","hashOfConfig":"148"},{"size":198,"mtime":1614634181831,"results":"149","hashOfConfig":"148"},{"size":3537,"mtime":1616129983167,"results":"150","hashOfConfig":"148"},{"size":4008,"mtime":1615336206132,"results":"151","hashOfConfig":"148"},{"size":4441,"mtime":1615334946199,"results":"152","hashOfConfig":"148"},{"size":6988,"mtime":1616015889153,"results":"153","hashOfConfig":"148"},{"size":6541,"mtime":1616194632346,"results":"154","hashOfConfig":"148"},{"size":6972,"mtime":1616015917452,"results":"155","hashOfConfig":"148"},{"size":7023,"mtime":1616016602880,"results":"156","hashOfConfig":"148"},{"size":18720,"mtime":1616195533219,"results":"157","hashOfConfig":"148"},{"size":7027,"mtime":1616015608476,"results":"158","hashOfConfig":"148"},{"size":7082,"mtime":1616015942602,"results":"159","hashOfConfig":"148"},{"size":7031,"mtime":1616015785924,"results":"160","hashOfConfig":"148"},{"size":7788,"mtime":1616015992883,"results":"161","hashOfConfig":"148"},{"size":7011,"mtime":1616015811152,"results":"162","hashOfConfig":"148"},{"size":7023,"mtime":1616015841133,"results":"163","hashOfConfig":"148"},{"size":7027,"mtime":1616017393998,"results":"164","hashOfConfig":"148"},{"size":23769,"mtime":1616133454281,"results":"165","hashOfConfig":"148"},{"size":7007,"mtime":1616016114928,"results":"166","hashOfConfig":"148"},{"size":487,"mtime":1612984037238,"results":"167","hashOfConfig":"148"},{"size":549,"mtime":1614635541083,"results":"168","hashOfConfig":"148"},{"size":524,"mtime":1612983911997,"results":"169","hashOfConfig":"148"},{"size":7057,"mtime":1616018537212,"results":"170","hashOfConfig":"148"},{"size":7013,"mtime":1616018962553,"results":"171","hashOfConfig":"148"},{"size":1375,"mtime":1615242729383,"results":"172","hashOfConfig":"148"},{"size":5247,"mtime":1616194835077,"results":"173","hashOfConfig":"148"},{"size":167,"mtime":1614800870679,"results":"174","hashOfConfig":"148"},{"size":12503,"mtime":1616195808813,"results":"175","hashOfConfig":"148"},{"size":227,"mtime":1613254851179,"results":"176","hashOfConfig":"148"},{"size":749,"mtime":1616149176260,"results":"177","hashOfConfig":"148"},{"size":230,"mtime":1614421512201,"results":"178","hashOfConfig":"148"},{"size":3366,"mtime":1616195757616,"results":"179","hashOfConfig":"148"},{"size":4424,"mtime":1616194669867,"results":"180","hashOfConfig":"148"},{"size":2359,"mtime":1616195629536,"results":"181","hashOfConfig":"148"},{"size":729,"mtime":1614803032590,"results":"182","hashOfConfig":"148"},{"size":6890,"mtime":1616195568134,"results":"183","hashOfConfig":"148"},{"size":898,"mtime":1616133254928,"results":"184","hashOfConfig":"148"},{"size":480,"mtime":1614425407501,"results":"185","hashOfConfig":"148"},{"size":8293,"mtime":1615498884106,"results":"186","hashOfConfig":"148"},{"size":7999,"mtime":1616194524611,"results":"187","hashOfConfig":"148"},{"size":15650,"mtime":1616194559719,"results":"188","hashOfConfig":"148"},{"size":1035,"mtime":1615512491072,"results":"189","hashOfConfig":"148"},{"size":51,"mtime":1612908051565,"results":"190","hashOfConfig":"148"},{"size":1743,"mtime":1614757549564,"results":"191","hashOfConfig":"148"},{"size":3315,"mtime":1614795771529,"results":"192","hashOfConfig":"148"},{"size":1775,"mtime":1616124739126,"results":"193","hashOfConfig":"148"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qh6rxj",{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"245"},"1cgl8m5",{"filePath":"246","messages":"247","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},"yx0tk8",{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"299"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"299"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"299"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"299"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"299"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"299"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"299"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"299"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"299"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"299"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"299"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"299"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"299"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"299"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"299"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"299"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"299"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\index.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\App.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\HomeBar.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\TopBar.js",["407","408"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\MyCarousel\\MyCarousel.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\MyCarousel\\CarouselData.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Categories\\Categories.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Brands\\Brands.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Footer\\Footer.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Home.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\Routes.js",["409"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\Guitars.js",["410"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Keyboards\\Keyboards.js",["411"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Drums\\Drums.js",["412"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\SignIn.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\SignUp.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\auth\\helper\\index.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\backend.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\auth\\helper\\AdminRoutes.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\auth\\helper\\PrivateRoutes.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\Profile.js",["413"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\coreapicalls.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\imageapicalls.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\Cart.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\CartUtility.js",["414","415","416"],"import React, { useState, useEffect } from \"react\";\r\n\r\nexport const cartUtility = (props) => {\r\n  let cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\");\r\n  cartItems.push(props);\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n};\r\n",["417","418"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\cartUtility.js",["419","420","421","422","423"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\CartItem.js",["424"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\StripeCheckout.js",[],["425","426"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\orderhelper.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\RazorpayCheckout.js",["427","428","429","430","431","432","433","434"],"import React, { useState, useEffect } from \"react\";\r\nimport TopBar from \"../TopBar\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport { loadAllItems, cartEmpty, getTotalPrice } from \"../../cart/cartUtility\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport Stripe from \"react-stripe-checkout\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { API } from \"../../backend\";\r\nimport { createOrder } from \"./orderhelper\";\r\n\r\nconst RazorpayCheckout = () => {\r\n  const { user } = isAuthenticated();\r\n  console.log(\"USER\", user.name);\r\n  console.log(getTotalPrice());\r\n\r\n  console.log(user);\r\n\r\n  const loadRazorpay = (src) => {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = src;\r\n      document.body.appendChild(script);\r\n      script.onload = () => {\r\n        resolve(true);\r\n      };\r\n      script.onerror = () => {\r\n        resolve(false);\r\n      };\r\n    });\r\n  };\r\n\r\n  const displayRazorpay = async () => {\r\n    const res = await loadRazorpay(\r\n      \"https://checkout.razorpay.com/v1/checkout.js\"\r\n    );\r\n    if (!res) {\r\n      alert(\"Razorpay SDK failed to load\");\r\n    }\r\n\r\n    const options = {\r\n      key: \"rzp_test_4fPfJ2irq7rlsW\", // Enter the Key ID generated from the Dashboard\r\n      amount: getTotalPrice() * 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n      currency: \"INR\",\r\n      name: \"Music Store\",\r\n      description: \"Music Store Test Transaction\",\r\n      image: \"\",\r\n      order_id: \"order_GgYgK8nHxnL7mu\", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n      handler: function (response) {\r\n        alert(response.razorpay_payment_id);\r\n        alert(response.razorpay_order_id);\r\n        alert(response.razorpay_signature);\r\n      },\r\n      prefill: {\r\n        name: user.name,\r\n        email: user.email,\r\n        contact: \"9999999999\",\r\n      },\r\n      notes: {\r\n        address: \"Razorpay Corporate Office\",\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    const paymentObject = new window.Razorpay(options);\r\n    paymentObject.open();\r\n    paymentObject.on(\"payment.failed\", function (response) {\r\n      alert(response.error.code);\r\n      alert(response.error.description);\r\n      alert(response.error.source);\r\n      alert(response.error.step);\r\n      alert(response.error.reason);\r\n      alert(response.error.metadata.order_id);\r\n      alert(response.error.metadata.payment_id);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Button onClick={displayRazorpay}>Pay with Razorpay</Button>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RazorpayCheckout;\r\n",["435","436"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\CreateCategories.js",["437"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\ManageCategories.js",["438"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\CreateProducts.js",["439","440"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\ManageProducts.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\ManageOrders.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\helper\\adminapicalls.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Brands\\BrandsData.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\ElectricGuitars.js",["441"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\AcousticGuitars.js",["442"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\BassGuitars.js",["443"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Pianos\\Pianos.js",["444"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Microphones\\Microphones.js",["445"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Softwares\\Softwares.js",["446"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Headphones\\Headphones.js",["447"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Amplifiers\\Amplifiers.js",["448"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Bluetooth Speakers\\BluetoothSpeakers.js",["449"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\DJ Gear\\DJGear.js",["450"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\helper\\userUtility.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\checkout\\Checkout.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\index.js",[],["451","452"],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\App.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\Routes.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\user\\SignUp.js",["453"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Alert } from \"react-bootstrap\";\r\nimport { signup } from \"../auth/helper\";\r\n\r\nconst SignUp = (props) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    success: \"\",\r\n  });\r\n  const { name, phoneNumber, email, password, error, success } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    console.log(\"NAME\", name);\r\n    console.log(\"EVENT\", event.target.value);\r\n    if (name === \"phoneNumber\" && event.target.value.length != 10)\r\n      setValues({\r\n        ...values,\r\n        [name]: event.target.value,\r\n        error: \"Please enter 10 digit phone number\",\r\n      });\r\n    else setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    signup({ name, phoneNumber, email, password })\r\n      .then((data) => {\r\n        if (data.errors) {\r\n          setValues({ ...values, error: data.errors[0].msg, success: false });\r\n        } else if (data.err) {\r\n          setValues({ ...values, error: data.err, success: false });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            phoneNumber: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            error: \"\",\r\n            success: true,\r\n          });\r\n        }\r\n      })\r\n      .catch(console.log(\"Error in signup\"));\r\n  };\r\n\r\n  const signUpForm = () => {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"md\"\r\n        centered\r\n        onExit={() => {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            phoneNumber: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            error: false,\r\n          });\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Signup</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Alert variant=\"success\" style={{ display: success ? \"\" : \"none\" }}>\r\n            Sign Up Successful! Please Sign in from home page.\r\n          </Alert>\r\n          <Alert variant=\"danger\" style={{ display: error ? \"\" : \"none\" }}>\r\n            {error}\r\n          </Alert>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                onChange={handleChange(\"name\")}\r\n                value={name}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Phone Number</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"+91 ...\"\r\n                onChange={handleChange(\"phoneNumber\")}\r\n                value={phoneNumber}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={handleChange(\"email\")}\r\n                value={email}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={handleChange(\"password\")}\r\n                value={password}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button onClick={onSubmit} variant=\"warning\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return <>{signUpForm()}</>;\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\user\\SignIn.js",["454"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Form,\r\n  Alert,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { signin, isAuthenticated, authenticate } from \"../auth/helper/index\";\r\nimport {\r\n  loadUserCartItemsFromDB,\r\n  saveUserCartItemsToLocalStorage,\r\n} from \"../cart/cartUtility\";\r\n\r\nconst SignIn = (props) => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    loading: false,\r\n  });\r\n  const [redirect, setRedirect] = useState(false);\r\n  const { email, password, error, loading } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false, loading: true });\r\n    signin({ email, password })\r\n      .then((data) => {\r\n        if (data.errors) {\r\n          setValues({ ...values, error: data.errors[0].msg, loading: false });\r\n        } else if (data.error) {\r\n          setValues({ ...values, error: data.error, loading: false });\r\n        } else {\r\n          authenticate(data, () => {\r\n            setValues({\r\n              ...values,\r\n              email: \"\",\r\n              password: \"\",\r\n            });\r\n          });\r\n          setTimeout(() => {\r\n            setRedirect(true);\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"signin in request failed\", error));\r\n  };\r\n\r\n  const performRedirect = () => {\r\n    if (redirect) {\r\n      if (user && user.role === 1) {\r\n        window.location.href = \"/\";\r\n      } else {\r\n        window.location.href = \"/\";\r\n        //return <Redirect to=\"/\" />;\r\n      }\r\n    }\r\n  };\r\n\r\n  const signInForm = () => {\r\n    if (isAuthenticated() && !localStorage.getItem(\"cartItems\")) {\r\n      loadUserCartItemsFromDB(user._id, token).then((data) => {\r\n        saveUserCartItemsToLocalStorage(data);\r\n        setValues({ ...values, loading: false });\r\n      });\r\n    }\r\n    return (\r\n      <Modal\r\n        show={redirect ? false : props.show}\r\n        onHide={props.onHide}\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        onExit={() => {\r\n          setValues({ ...values, email: \"\", password: \"\", error: false });\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Signin</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <Alert\r\n                  variant=\"success\"\r\n                  style={{ display: loading ? \"\" : \"none\" }}\r\n                >\r\n                  Sign in Successful! Loading page...{\" \"}\r\n                  <Spinner animation=\"border\" />\r\n                </Alert>\r\n                <Alert\r\n                  variant=\"danger\"\r\n                  style={{ display: error ? \"\" : \"none\" }}\r\n                >\r\n                  {error}\r\n                </Alert>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      onChange={handleChange(\"email\")}\r\n                      value={email}\r\n                    />\r\n                    <Form.Text className=\"text-muted\">\r\n                      We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      onChange={handleChange(\"password\")}\r\n                      value={password}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Button variant=\"warning\" type=\"submit\" onClick={onSubmit}>\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {signInForm()} {performRedirect()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Guitars\\AcousticGuitars.js",["455"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst AcousticGuitars = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Acoustic Guitars\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Acoustic Guitars\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          block\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(AcousticGuitars);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\cart\\Cart.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Guitars\\BassGuitars.js",["456"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst BassGuitars = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Bass Guitars\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Bass Guitars\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          block\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(BassGuitars);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Keyboards\\Keyboards.js",["457"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Keyboards = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Keyboards\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Keyboards\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Keyboards);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\checkout\\Checkout.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Headphones\\Headphones.js",["458"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Headphones = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Headphones\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Headphones\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Headphones);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Guitars\\ElectricGuitars.js",["459"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst ElectricGuitars = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(products);\r\n  console.log(\"MAP\", productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Electric Guitars\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Electric Guitars\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ElectricGuitars);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Microphones\\Microphones.js",["460"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Microphones = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Microphones\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Microphones\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Microphones);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Guitars\\Guitars.js",["461"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Guitars = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  const items = () => {\r\n    let arr = [];\r\n    productsMap.forEach((value, key) => {\r\n      if (key.search(\"Guitars\") > 0) {\r\n        arr.push(\r\n          <Container className=\"mx-5\">\r\n            <Row className=\"d-block my-5\">\r\n              <h4\r\n                style={{\r\n                  padding: \"5px 5px 5px 15px\",\r\n                  color: \"white\",\r\n                  backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  history.push(\r\n                    `/collections/${key.toLowerCase().replace(\" \", \"-\")}`\r\n                  );\r\n                }}\r\n              >\r\n                {key}\r\n              </h4>\r\n            </Row>\r\n            <Row>\r\n              {value.slice(0, 8).map((product, index) => {\r\n                return (\r\n                  <Col\r\n                    lg={3}\r\n                    md={4}\r\n                    sm={6}\r\n                    xs={12}\r\n                    className=\"p-3 text-center\"\r\n                    key={index}\r\n                  >\r\n                    <Card className=\"cardHover\">\r\n                      <Card.Body>\r\n                        {dataLoaded ? (\r\n                          <div\r\n                            style={{\r\n                              width: \"211px\",\r\n                              height: \"211px\",\r\n                              overflow: \"hidden\",\r\n                              margin: \"auto\",\r\n                            }}\r\n                          >\r\n                            <Card.Img\r\n                              variant=\"top\"\r\n                              src={getProductImages(product)}\r\n                            />\r\n                          </div>\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                        <h6>{dataLoaded ? product.name : <Skeleton />}</h6>\r\n                        <h5 style={{ color: \"#de0101\" }}>\r\n                          <FaRupeeSign />\r\n                          {dataLoaded ? (\r\n                            `${product.price.toLocaleString(\"hi-IN\")}`\r\n                          ) : (\r\n                            <Skeleton />\r\n                          )}\r\n                        </h5>\r\n                        {dataLoaded ? (\r\n                          <Button\r\n                            block\r\n                            style={{\r\n                              borderColor: \"white\",\r\n                              color: \"white\",\r\n                              background:\r\n                                \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                            }}\r\n                            onClick={() => {\r\n                              handleClick(product);\r\n                            }}\r\n                          >\r\n                            Add to Card\r\n                          </Button>\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </Container>\r\n        );\r\n      }\r\n    });\r\n    return arr;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      {dataLoaded ? (\r\n        items().map((ele, index) => <div key={index}>{ele}</div>)\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Guitars);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Pianos\\Pianos.js",["462"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Pianos = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Pianos\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Pianos\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Pianos);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Softwares\\Softwares.js",["463"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Softwares = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Softwares\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Softwares\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Softwares);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Amplifiers\\Amplifiers.js",["464"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Amplifiers = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Amplifiers\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Amplifiers\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Amplifiers);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\user\\Profile.js",["465","466"],"import React, { useState, useEffect } from \"react\";\r\nimport HomeBar from \"../core/HomeBar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  InputGroup,\r\n  FormControl,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Form,\r\n  Jumbotron,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { FaRupeeSign, FaPlus } from \"react-icons/fa\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport Footer from \"../core/Footer/Footer\";\r\nimport \"./profile.css\";\r\nimport { userPurchaseList } from \"../core/helper/orderhelper\";\r\nimport { getProductImages } from \"../core/helper/imageapicalls\";\r\nimport CreateCategories from \"../admin/CreateCategories\";\r\nimport ManageCategories from \"../admin/ManageCategories\";\r\nimport CreateProducts from \"../admin/CreateProducts\";\r\nimport ManageProducts from \"../admin/ManageProducts\";\r\nimport ManageOrders from \"../admin/ManageOrders\";\r\nimport {\r\n  deleteUserAddress,\r\n  fetchUserAddresses,\r\n  saveUserAddresses,\r\n} from \"./helper/userUtility\";\r\n\r\nconst STATE_LIST = [\r\n  { _id: 1, state_name: \"Andaman & Nicobar Islands\" },\r\n  { _id: 2, state_name: \"Andhra Pradesh\" },\r\n  { _id: 3, state_name: \"Arunachal Pradesh\" },\r\n  { _id: 4, state_name: \"Assam\" },\r\n  { _id: 5, state_name: \"Bihar\" },\r\n  { _id: 6, state_name: \"Chandigarh\" },\r\n  { _id: 7, state_name: \"Chhattisgarh\" },\r\n  { _id: 8, state_name: \"Dadra & Nagar Haveli & Daman & Diu\" },\r\n  { _id: 9, state_name: \"Delhi\" },\r\n  { _id: 10, state_name: \"Goa\" },\r\n  { _id: 11, state_name: \"Gujarat\" },\r\n  { _id: 12, state_name: \"Haryana\" },\r\n  { _id: 13, state_name: \"Himachal Pradesh\" },\r\n  { _id: 14, state_name: \"Jammu & Kashmir\" },\r\n  { _id: 15, state_name: \"Jharkhand\" },\r\n  { _id: 16, state_name: \"Karnataka\" },\r\n  { _id: 17, state_name: \"Kerala\" },\r\n  { _id: 18, state_name: \"Ladakh\" },\r\n  { _id: 19, state_name: \"Lakshadweep\" },\r\n  { _id: 20, state_name: \"Madhya Pradesh\" },\r\n  { _id: 21, state_name: \"Maharashtra\" },\r\n  { _id: 22, state_name: \"Manipur\" },\r\n  { _id: 23, state_name: \"Meghalaya\" },\r\n  { _id: 24, state_name: \"Mizoram\" },\r\n  { _id: 25, state_name: \"Nagaland\" },\r\n  { _id: 26, state_name: \"Odisha\" },\r\n  { _id: 27, state_name: \"Puducherry\" },\r\n  { _id: 28, state_name: \"Punjab\" },\r\n  { _id: 29, state_name: \"Rajasthan\" },\r\n  { _id: 30, state_name: \"Sikkim\" },\r\n  { _id: 31, state_name: \"Tamil Nadu\" },\r\n  { _id: 32, state_name: \"Telangana\" },\r\n  { _id: 33, state_name: \"Tripura\" },\r\n  { _id: 34, state_name: \"Uttarakhand\" },\r\n  { _id: 35, state_name: \"Uttar Pradesh\" },\r\n  { _id: 36, state_name: \"West Bengal\" },\r\n];\r\n\r\nconst Profile = () => {\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    isAuthenticated();\r\n    preload();\r\n  }, [redirect]);\r\n\r\n  const { user } = isAuthenticated();\r\n  const userToken = isAuthenticated() && isAuthenticated().token;\r\n  const userId = isAuthenticated() && isAuthenticated().user._id;\r\n\r\n  const [btn1, setBtn1] = useState(true);\r\n  const [btn2, setBtn2] = useState(false);\r\n  const [btn3, setBtn3] = useState(false);\r\n  const [btn4, setBtn4] = useState(false);\r\n  const [btn5, setBtn5] = useState(false);\r\n  const [btn6, setBtn6] = useState(false);\r\n\r\n  const [purchaseList, setPurchaseList] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [fetchedUserAddresses, setFetchedUserAddresses] = useState([]);\r\n\r\n  const preload = async () => {\r\n    const userAddresses = await fetchUserAddresses(userId, userToken);\r\n    setFetchedUserAddresses(userAddresses);\r\n  };\r\n\r\n  const loadUserPurchaseList = async () => {\r\n    await userPurchaseList(userId, userToken)\r\n      .then((data) => {\r\n        setPurchaseList(data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [addressValues, setAddressValues] = useState({\r\n    name: \"\",\r\n    mobileNo: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    pincode: \"\",\r\n    alternatePhone: \"\",\r\n    addressType: \"\",\r\n  });\r\n\r\n  const handleChange = (field) => (event) => {\r\n    const value = event.target.value;\r\n    console.log(value);\r\n    setAddressValues({ ...addressValues, [field]: value });\r\n    console.log(addressValues);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let data = await saveUserAddresses(userId, userToken, addressValues);\r\n    if (data?.error) {\r\n      console.log(data.error);\r\n    } else {\r\n      setAddressValues({\r\n        name: \"\",\r\n        mobileNo: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        pincode: \"\",\r\n        alternatePhone: \"\",\r\n        addressType: \"\",\r\n      });\r\n      handleClose();\r\n      setRedirect(!redirect);\r\n      console.log(data.message);\r\n    }\r\n  };\r\n\r\n  const handleAddAddress = () => {\r\n    if (show) {\r\n      return (\r\n        <Jumbotron>\r\n          <div className=\"font-weight-bold text-primary mb-3\">\r\n            ADD A NEW ADDRESS\r\n          </div>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange(\"name\")}\r\n                  required\r\n                  type=\"text\"\r\n                  value={addressValues.name}\r\n                  placeholder=\"Name\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridMobileNo\">\r\n                <Form.Label>Mobile Number</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange(\"mobileNo\")}\r\n                  value={addressValues.mobileNo}\r\n                  required\r\n                  type=\"text\"\r\n                  pattern=\"[6789][0-9]{9}\"\r\n                  minLength=\"10\"\r\n                  maxLength=\"10\"\r\n                  placeholder=\"10-digit mobile number\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group controlId=\"formAddress\">\r\n              <Form.Label>Address</Form.Label>\r\n              <textarea\r\n                onChange={handleChange(\"address\")}\r\n                value={addressValues.address}\r\n                style={{ resize: \"none\" }}\r\n                required\r\n                rows=\"4\"\r\n                className=\"form-control\"\r\n                placeholder=\"Address (Area and Street)\"\r\n              ></textarea>\r\n            </Form.Group>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridName\">\r\n                <Form.Label>City/District/Town</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange(\"city\")}\r\n                  value={addressValues.city}\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"City/District/Town\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formState\">\r\n                <Form.Label>State</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange(\"state\")}\r\n                  value={addressValues.state}\r\n                  required\r\n                  as=\"select\"\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    --Select State--\r\n                  </option>\r\n                  {STATE_LIST.map(({ _id, state_name }) => {\r\n                    return (\r\n                      <option value={state_name} key={_id}>\r\n                        {state_name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formPincode\">\r\n                <Form.Label>Pincode</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange(\"pincode\")}\r\n                  value={addressValues.pincode}\r\n                  required\r\n                  type=\"text\"\r\n                  pattern=\"[0-9]{6}\"\r\n                  minLength=\"6\"\r\n                  maxLength=\"6\"\r\n                  placeholder=\"Pincode\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formAltContact\">\r\n                <Form.Label>Alternate Mobile Number</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange(\"alternatePhone\")}\r\n                  value={addressValues.alternatePhone}\r\n                  type=\"text\"\r\n                  pattern=\"[6789][0-9]{9}\"\r\n                  minLength=\"10\"\r\n                  maxLength=\"10\"\r\n                  placeholder=\"Alternate Phone (Optional)\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Label>Address Type</Form.Label>\r\n            <Form.Row className=\"mb-3\">\r\n              <Form.Group as={Col} controlId=\"formAddressType\">\r\n                <>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"Home\"\r\n                    name=\"address-type\"\r\n                    value=\"Home\"\r\n                    onChange={handleChange(\"addressType\")}\r\n                    className=\"mx-2\"\r\n                  />\r\n                  <label htmlFor=\"Home\">Home</label>\r\n\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"Work\"\r\n                    name=\"address-type\"\r\n                    value=\"Work\"\r\n                    onChange={handleChange(\"addressType\")}\r\n                    className=\"mx-2\"\r\n                  />\r\n                  <label htmlFor=\"Work\">Work</label>\r\n                </>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <div>\r\n              <Button type=\"submit\" className=\"px-5 mx-2\" variant=\"primary\">\r\n                Save\r\n              </Button>\r\n              <Button\r\n                className=\"px-5\"\r\n                onClick={handleClose}\r\n                variant=\"outline-primary\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Jumbotron>\r\n      );\r\n    }\r\n    return (\r\n      <Button onClick={handleShow}>\r\n        <FaPlus /> Add Address\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const handleDeleteClick = (addressId) => {\r\n    deleteUserAddress(userId, userToken, addressId);\r\n    setRedirect(!redirect);\r\n  };\r\n\r\n  const displayCard = () => {\r\n    if (btn1) {\r\n      return (\r\n        <Card style={{ width: \"100%\", margin: \"1rem\" }} className=\"shadow\">\r\n          <Card.Body>\r\n            <label>\r\n              <h4>Personal Information</h4>\r\n            </label>\r\n            <div className=\"mt-3\">\r\n              <label>Username</label>\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  placeholder={user.name}\r\n                  aria-label=\"Username\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  disabled\r\n                />\r\n              </InputGroup>\r\n\r\n              <label>\r\n                <h5>Email Address</h5>\r\n              </label>\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  placeholder={user.email}\r\n                  aria-label=\"Username\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  disabled\r\n                />\r\n              </InputGroup>\r\n              <label>\r\n                <h5>Mobile Number</h5>\r\n              </label>\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  placeholder={`+91-${user.phoneNumber}`}\r\n                  aria-label=\"Username\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  disabled\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n          </Card.Body>\r\n          <Card.Footer\r\n            style={{\r\n              background: \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n            }}\r\n          ></Card.Footer>\r\n        </Card>\r\n      );\r\n    } else if (btn2) {\r\n      if (user.role === 1) {\r\n        return <CreateCategories />;\r\n      }\r\n      return (\r\n        <Card style={{ width: \"100%\", margin: \"1rem\" }} className=\"shadow\">\r\n          <Card.Body>\r\n            <label>\r\n              <h4>Manage Addresses</h4>\r\n            </label>\r\n            <InputGroup>{handleAddAddress()}</InputGroup>\r\n            <h5 className=\"mt-3\">Saved Addresses</h5>\r\n            <InputGroup>\r\n              {fetchedUserAddresses.length === 0 ? (\r\n                <Card style={{ width: \"100%\" }}>\r\n                  <Card.Body>Please Add Address</Card.Body>\r\n                </Card>\r\n              ) : (\r\n                fetchedUserAddresses.map((address, index) => {\r\n                  return (\r\n                    <Card key={index} className=\"w-100 my-3\">\r\n                      <Card.Header className=\"font-weight-bold\">\r\n                        {address.addressType}\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        <Row>\r\n                          <Col lg={3} className=\"d-flex align-items-center \">\r\n                            <h6 className=\"mb-0 text-primary\">\r\n                              {address.name.toUpperCase()}\r\n                            </h6>\r\n                          </Col>\r\n                          <Col lg={3} className=\"d-flex align-items-center\">\r\n                            <h6 className=\"mb-0 text-primary\">\r\n                              {`+91-${address.mobileNo}`}\r\n                            </h6>\r\n                          </Col>\r\n                          <Col className=\"d-flex justify-content-end\">\r\n                            <Button\r\n                              onClick={() => {\r\n                                handleDeleteClick(address._id);\r\n                              }}\r\n                              variant=\"danger\"\r\n                            >\r\n                              DELETE\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"my-2\">\r\n                          <Col>{`${address.address}, ${address.city}, ${address.state} - ${address.pincode}.`}</Col>\r\n                        </Row>\r\n                        {address.alternatePhone !== \"\" ? (\r\n                          <Row>\r\n                            <Col>{`Alternate Contact Number: +91-${address.alternatePhone}`}</Col>\r\n                          </Row>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </Card.Body>\r\n                    </Card>\r\n                  );\r\n                })\r\n              )}\r\n            </InputGroup>\r\n          </Card.Body>\r\n          <Card.Footer\r\n            style={{\r\n              background: \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n            }}\r\n          />\r\n        </Card>\r\n      );\r\n    } else if (btn3) {\r\n      if (user.role === 1) {\r\n        return <ManageCategories />;\r\n      }\r\n      return (\r\n        <Card style={{ width: \"100%\", margin: \"1rem\" }} className=\"shadow\">\r\n          <Card.Body>\r\n            <label>\r\n              <h4>My Orders</h4>\r\n            </label>\r\n            {purchaseList.length > 0 ? (\r\n              purchaseList.map((item, index) => {\r\n                return (\r\n                  <Card\r\n                    key={index}\r\n                    style={{ width: \"100%\" }}\r\n                    className=\"cardHover m-2\"\r\n                  >\r\n                    <Container>\r\n                      <Row>\r\n                        <Col lg={3}>\r\n                          <Card.Img\r\n                            style={{ height: \"120px\", width: \"120px\" }}\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </Col>\r\n                        <Col lg={5}>\r\n                          <Card.Body>\r\n                            <Card.Text>{item.name}</Card.Text>\r\n                            <h6 style={{ color: \"grey\" }}>\r\n                              {item.description}\r\n                            </h6>\r\n                            <h6>\r\n                              <FaRupeeSign />\r\n                              {item.amount.toLocaleString(\"hi-IN\")}\r\n                            </h6>\r\n                          </Card.Body>\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                  </Card>\r\n                );\r\n              })\r\n            ) : (\r\n              <Card>No orders</Card>\r\n            )}\r\n          </Card.Body>\r\n          <Card.Footer\r\n            style={{\r\n              background: \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n            }}\r\n          />\r\n        </Card>\r\n      );\r\n    } else if (btn4) {\r\n      return <CreateProducts />;\r\n    } else if (btn5) {\r\n      return <ManageProducts />;\r\n    } else if (btn6) {\r\n      return <ManageOrders />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HomeBar />\r\n      <Container className=\"mt-4\">\r\n        <Row>\r\n          <Col lg={3} md={1} sm={3}>\r\n            <Row>\r\n              <Card\r\n                style={{ width: \"100%\", margin: \"1rem\" }}\r\n                className=\"shadow\"\r\n              >\r\n                <Card.Body>\r\n                  <Image\r\n                    src=\"https://www.pavilionweb.com/wp-content/uploads/2017/03/man-300x300.png\"\r\n                    style={{ width: \"50px\" }}\r\n                    rounded\r\n                  />{\" \"}\r\n                  Hello, {user.name}\r\n                  {user.role === 1 ? (\r\n                    <Card.Text className=\"text-center font-weight-bold\">\r\n                      Admin Access\r\n                    </Card.Text>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Card.Body>\r\n                <Card.Footer\r\n                  style={{\r\n                    background:\r\n                      \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n                  }}\r\n                />\r\n              </Card>\r\n            </Row>\r\n            <Row>\r\n              <Card\r\n                style={{ width: \"100%\", margin: \"1rem\" }}\r\n                className=\"shadow\"\r\n              >\r\n                <Card.Body>\r\n                  <ListGroup\r\n                    as=\"ul\"\r\n                    variant=\"flush\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <ListGroup.Item\r\n                      as=\"li\"\r\n                      className=\"onHover\"\r\n                      active={btn1}\r\n                      onClick={() => {\r\n                        setBtn1(true);\r\n                        setBtn2(false);\r\n                        setBtn3(false);\r\n                        setBtn4(false);\r\n                        setBtn5(false);\r\n                        setBtn6(false);\r\n                      }}\r\n                    >\r\n                      Profile Information\r\n                    </ListGroup.Item>\r\n                    {user.role !== 1 ? (\r\n                      <>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn2}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(true);\r\n                            setBtn3(false);\r\n                          }}\r\n                        >\r\n                          Manage Addresses\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn3}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(false);\r\n                            setBtn3(true);\r\n                            loadUserPurchaseList();\r\n                          }}\r\n                        >\r\n                          My Orders\r\n                        </ListGroup.Item>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn2}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(true);\r\n                            setBtn3(false);\r\n                            setBtn4(false);\r\n                            setBtn5(false);\r\n                            setBtn6(false);\r\n                          }}\r\n                        >\r\n                          Create Categories\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn3}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(false);\r\n                            setBtn3(true);\r\n                            setBtn4(false);\r\n                            setBtn5(false);\r\n                            setBtn6(false);\r\n                          }}\r\n                        >\r\n                          Manage Categories\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn4}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(false);\r\n                            setBtn3(false);\r\n                            setBtn4(true);\r\n                            setBtn5(false);\r\n                            setBtn6(false);\r\n                          }}\r\n                        >\r\n                          Create Products\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn5}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(false);\r\n                            setBtn3(false);\r\n                            setBtn4(false);\r\n                            setBtn5(true);\r\n                            setBtn6(false);\r\n                          }}\r\n                        >\r\n                          Manage Products\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn6}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(false);\r\n                            setBtn3(false);\r\n                            setBtn4(false);\r\n                            setBtn5(false);\r\n                            setBtn6(true);\r\n                          }}\r\n                        >\r\n                          Manage Orders\r\n                        </ListGroup.Item>\r\n                      </>\r\n                    )}\r\n                  </ListGroup>\r\n                </Card.Body>\r\n                <Card.Footer\r\n                  style={{\r\n                    background:\r\n                      \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n                  }}\r\n                />\r\n              </Card>\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Row>{displayCard()}</Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Drums\\Drums.js",["467"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Drums = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Drums\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Drums\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Drums);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\auth\\helper\\PrivateRoutes.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\Home.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\auth\\helper\\AdminRoutes.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\Bluetooth Speakers\\BluetoothSpeakers.js",["468"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst BluetoothSpeakers = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Bluetooth Speakers\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Bluetooth Speakers\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(BluetoothSpeakers);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\pages\\DJ Gear\\DJGear.js",["469"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst DJGear = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          DJ Gear\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"DJ Gear\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(DJGear);\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\auth\\helper\\index.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\cart\\cartUtility.js",["470","471","472","473","474"],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\HomeBar.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\TopBar.js",["475","476"],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\helper\\imageapicalls.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\helper\\orderhelper.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\helper\\coreapicalls.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\MyCarousel\\MyCarousel.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\cart\\CartItem.js",["477"],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\Footer\\Footer.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\Brands\\Brands.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\Categories\\Categories.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\user\\helper\\userUtility.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\admin\\ManageOrders.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\admin\\CreateCategories.js",["478"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  FormControl,\r\n  InputGroup,\r\n  Button,\r\n  Accordion,\r\n  ListGroup,\r\n  Alert,\r\n  Modal,\r\n  Spinner,\r\n  ListGroupItem,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport {\r\n  createCategory,\r\n  getAllCategories,\r\n  updateCategory,\r\n} from \"./helper/adminapicalls\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nconst CreateCategories = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [categoryName, setCategoryName] = useState({});\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [subCategoryList, setSubCategoryList] = useState([]);\r\n  const [subSuccess, setSubSuccess] = useState(false);\r\n\r\n  const { token, user } = isAuthenticated();\r\n\r\n  useEffect(() => {\r\n    displayAllCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    displayAllCategories();\r\n  }, [reload]);\r\n\r\n  const handleChange = (event) => {\r\n    setError(false);\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setError(false);\r\n    setSuccess(false);\r\n    if (name === \"\") {\r\n      setError(true);\r\n      setErrorMessage(\"Field cannot be empty\");\r\n    } else {\r\n      createCategory(user._id, token, { name }).then((data) => {\r\n        //console.log(\"DATA\", data);\r\n        if (data.error) {\r\n          setError(true);\r\n          setErrorMessage(data.error);\r\n        } else {\r\n          setCategoryName(data.category);\r\n          //console.log(subCategories, name);\r\n          setError(false);\r\n          setErrorMessage(\"\");\r\n          setSuccess(true);\r\n          setName(\"\");\r\n          setReload(!reload);\r\n          setShow(true);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const displayAllCategories = async () => {\r\n    await getAllCategories().then((data) => {\r\n      if (data.error) {\r\n        //console.log(data.error);\r\n      } else {\r\n        setLoaded(true);\r\n        setCategories(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const displayAccordion = () => {\r\n    return loaded ? (\r\n      <Accordion>\r\n        <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n              All Categories\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <ListGroup>\r\n              {categories.map((category, index) => {\r\n                return (\r\n                  <ListGroup.Item key={index}>{category.name}</ListGroup.Item>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    ) : (\r\n      \"\"\r\n    );\r\n  };\r\n\r\n  const setStateFalse = () => {\r\n    if (error) {\r\n      setTimeout(() => {\r\n        setError(false);\r\n      }, 1500);\r\n    } else if (success) {\r\n      setTimeout(() => {\r\n        setSuccess(false);\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  const onSubmitModal = () => {\r\n    const handleClose = () => {\r\n      setSubSuccess(false);\r\n      setShow(false);\r\n    };\r\n\r\n    const handleOnInputChange = (event) => {\r\n      setSubCategory(event.target.value);\r\n    };\r\n\r\n    //console.log(\"sC\", subCategory);\r\n\r\n    const handleAddSubCategory = () => {\r\n      let arr = new Array();\r\n      arr.push(subCategory);\r\n      setSubCategoryList([...subCategoryList, arr]);\r\n      setSubCategory(\"\");\r\n      //console.log(\"arr\", subCategoryList);\r\n    };\r\n\r\n    const handleSubCategoryDelete = (deletedSubCategory) => {\r\n      setSubCategoryList(\r\n        subCategoryList.filter((x) => {\r\n          return x[0] !== deletedSubCategory;\r\n        })\r\n      );\r\n    };\r\n\r\n    const handleSaveChanges = async () => {\r\n      //console.log(categoryName);\r\n      const updatedCategory = {\r\n        name: categoryName.name,\r\n        subCategories: subCategoryList,\r\n      };\r\n      //console.log(updatedCategory);\r\n      await updateCategory(user._id, categoryName, token, updatedCategory).then(\r\n        (data) => {\r\n          if (data.error) {\r\n            console.log(\"PROMISE ERROR\", data.error);\r\n          } else {\r\n            setSubSuccess(true);\r\n            setSubCategoryList([]);\r\n            //console.log(\"PROMISE RES\", data);\r\n          }\r\n        }\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add sub-category to the category.</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Alert variant=\"success\">\r\n            {subSuccess\r\n              ? `Changes saved successfully.`\r\n              : `Category ${categoryName.name} created successfully.`}\r\n          </Alert>\r\n          <InputGroup>\r\n            <FormControl\r\n              disabled={subSuccess}\r\n              placeholder=\"Enter sub category\"\r\n              onChange={handleOnInputChange}\r\n              value={subCategory}\r\n            />\r\n            <Button disabled={subSuccess} onClick={handleAddSubCategory}>\r\n              Add\r\n            </Button>\r\n          </InputGroup>\r\n          <ListGroup>\r\n            {subCategoryList.length > 0\r\n              ? subCategoryList.map((s, i) => {\r\n                  return (\r\n                    <ListGroupItem key={i}>\r\n                      <Row>\r\n                        <Col lg={9}>{s}</Col>\r\n                        <Col>\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            onClick={() => {\r\n                              handleSubCategoryDelete(s);\r\n                            }}\r\n                          >\r\n                            <FaTrash />\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroupItem>\r\n                  );\r\n                })\r\n              : \"\"}\r\n          </ListGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            disabled={subSuccess}\r\n            variant={subSuccess ? \"success\" : \"primary\"}\r\n            onClick={handleSaveChanges}\r\n          >\r\n            {subSuccess ? `Changes Saved` : `Save Changes`}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const form = () => {\r\n    return (\r\n      <div style={{ lineHeight: \"4\" }}>\r\n        <div>Enter the Category</div>\r\n        {error ? (\r\n          <Alert variant=\"danger\">\r\n            <Spinner animation=\"border\" variant=\"danger\" /> {errorMessage}\r\n            {setStateFalse()}\r\n          </Alert>\r\n        ) : success ? (\r\n          <Alert variant=\"success\">\r\n            <Spinner animation=\"border\" variant=\"success\" /> Category created\r\n            successfully.\r\n            {setStateFalse()}\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <InputGroup>\r\n          <FormControl\r\n            autoFocus\r\n            required\r\n            onChange={handleChange}\r\n            value={name}\r\n            disabled={error || success}\r\n            placeholder=\"for example: Guitar\"\r\n          />\r\n        </InputGroup>\r\n        <div>\r\n          <Button\r\n            variant={error ? \"danger\" : \"primary\"}\r\n            disabled={error || success}\r\n            onClick={onSubmit}\r\n          >\r\n            {error ? `Retry...` : `Create Category`}\r\n          </Button>\r\n        </div>\r\n        <div>{displayAccordion()}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ width: \"100%\", margin: \"1rem\" }} className=\"shadow\">\r\n        <Card.Body>\r\n          <label>\r\n            <h4>Create Categories</h4>\r\n          </label>\r\n          {form()}\r\n        </Card.Body>\r\n        <Card.Footer\r\n          style={{\r\n            background: \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n          }}\r\n        />\r\n      </Card>\r\n      {onSubmitModal()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateCategories;\r\n","C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\admin\\CreateProducts.js",["479","480"],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\admin\\ManageCategories.js",["481"],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\admin\\ManageProducts.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\backend.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\MyCarousel\\CarouselData.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\core\\Brands\\BrandsData.js",[],"C:\\Users\\Walk\\desktop\\Music Store\\front-end\\src\\admin\\helper\\adminapicalls.js",[],{"ruleId":"482","severity":1,"message":"483","line":47,"column":10,"nodeType":"484","messageId":"485","endLine":47,"endColumn":15},{"ruleId":"486","severity":1,"message":"487","line":80,"column":6,"nodeType":"488","endLine":80,"endColumn":16,"suggestions":"489"},{"ruleId":"482","severity":1,"message":"490","line":13,"column":8,"nodeType":"484","messageId":"485","endLine":13,"endColumn":18},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"492"},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"493"},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"494"},{"ruleId":"486","severity":1,"message":"495","line":100,"column":6,"nodeType":"488","endLine":100,"endColumn":16,"suggestions":"496"},{"ruleId":"482","severity":1,"message":"497","line":1,"column":8,"nodeType":"484","messageId":"485","endLine":1,"endColumn":13},{"ruleId":"482","severity":1,"message":"498","line":1,"column":17,"nodeType":"484","messageId":"485","endLine":1,"endColumn":25},{"ruleId":"482","severity":1,"message":"499","line":1,"column":27,"nodeType":"484","messageId":"485","endLine":1,"endColumn":36},{"ruleId":"500","replacedBy":"501"},{"ruleId":"502","replacedBy":"503"},{"ruleId":"504","severity":1,"message":"505","line":34,"column":42,"nodeType":"506","messageId":"507","endLine":34,"endColumn":44},{"ruleId":"504","severity":1,"message":"505","line":67,"column":45,"nodeType":"506","messageId":"507","endLine":67,"endColumn":47},{"ruleId":"504","severity":1,"message":"505","line":82,"column":40,"nodeType":"506","messageId":"507","endLine":82,"endColumn":42},{"ruleId":"504","severity":1,"message":"505","line":111,"column":42,"nodeType":"506","messageId":"507","endLine":111,"endColumn":44},{"ruleId":"504","severity":1,"message":"505","line":127,"column":38,"nodeType":"506","messageId":"507","endLine":127,"endColumn":40},{"ruleId":"486","severity":1,"message":"508","line":23,"column":6,"nodeType":"488","endLine":23,"endColumn":8,"suggestions":"509"},{"ruleId":"500","replacedBy":"510"},{"ruleId":"502","replacedBy":"511"},{"ruleId":"482","severity":1,"message":"498","line":1,"column":17,"nodeType":"484","messageId":"485","endLine":1,"endColumn":25},{"ruleId":"482","severity":1,"message":"499","line":1,"column":27,"nodeType":"484","messageId":"485","endLine":1,"endColumn":36},{"ruleId":"482","severity":1,"message":"512","line":4,"column":10,"nodeType":"484","messageId":"485","endLine":4,"endColumn":22},{"ruleId":"482","severity":1,"message":"513","line":4,"column":24,"nodeType":"484","messageId":"485","endLine":4,"endColumn":33},{"ruleId":"482","severity":1,"message":"514","line":5,"column":10,"nodeType":"484","messageId":"485","endLine":5,"endColumn":14},{"ruleId":"482","severity":1,"message":"515","line":7,"column":8,"nodeType":"484","messageId":"485","endLine":7,"endColumn":14},{"ruleId":"482","severity":1,"message":"516","line":9,"column":10,"nodeType":"484","messageId":"485","endLine":9,"endColumn":13},{"ruleId":"482","severity":1,"message":"517","line":10,"column":10,"nodeType":"484","messageId":"485","endLine":10,"endColumn":21},{"ruleId":"500","replacedBy":"518"},{"ruleId":"502","replacedBy":"519"},{"ruleId":"520","severity":1,"message":"521","line":141,"column":17,"nodeType":"522","messageId":"523","endLine":141,"endColumn":28},{"ruleId":"504","severity":1,"message":"505","line":331,"column":47,"nodeType":"506","messageId":"507","endLine":331,"endColumn":49},{"ruleId":"486","severity":1,"message":"495","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"524"},{"ruleId":"504","severity":1,"message":"505","line":112,"column":33,"nodeType":"506","messageId":"507","endLine":112,"endColumn":35},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"525"},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"526"},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"527"},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"528"},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"529"},{"ruleId":"486","severity":1,"message":"491","line":38,"column":6,"nodeType":"488","endLine":38,"endColumn":8,"suggestions":"530"},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"531"},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"532"},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"533"},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"534"},{"ruleId":"500","replacedBy":"535"},{"ruleId":"502","replacedBy":"536"},{"ruleId":"537","severity":1,"message":"538","line":19,"column":61,"nodeType":"539","messageId":"540","endLine":19,"endColumn":63},{"ruleId":"482","severity":1,"message":"499","line":1,"column":27,"nodeType":"484","messageId":"485","endLine":1,"endColumn":36},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"541"},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"542"},{"ruleId":"486","severity":1,"message":"491","line":38,"column":6,"nodeType":"488","endLine":38,"endColumn":8,"suggestions":"543"},{"ruleId":"486","severity":1,"message":"491","line":38,"column":6,"nodeType":"488","endLine":38,"endColumn":8,"suggestions":"544"},{"ruleId":"486","severity":1,"message":"491","line":38,"column":6,"nodeType":"488","endLine":38,"endColumn":8,"suggestions":"545"},{"ruleId":"486","severity":1,"message":"491","line":38,"column":6,"nodeType":"488","endLine":38,"endColumn":8,"suggestions":"546"},{"ruleId":"486","severity":1,"message":"491","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"547"},{"ruleId":"486","severity":1,"message":"491","line":38,"column":6,"nodeType":"488","endLine":38,"endColumn":8,"suggestions":"548"},{"ruleId":"486","severity":1,"message":"491","line":38,"column":6,"nodeType":"488","endLine":38,"endColumn":8,"suggestions":"549"},{"ruleId":"486","severity":1,"message":"491","line":38,"column":6,"nodeType":"488","endLine":38,"endColumn":8,"suggestions":"550"},{"ruleId":"482","severity":1,"message":"551","line":15,"column":3,"nodeType":"484","messageId":"485","endLine":15,"endColumn":16},{"ruleId":"486","severity":1,"message":"495","line":79,"column":6,"nodeType":"488","endLine":79,"endColumn":16,"suggestions":"552"},{"ruleId":"486","severity":1,"message":"491","line":38,"column":6,"nodeType":"488","endLine":38,"endColumn":8,"suggestions":"553"},{"ruleId":"486","severity":1,"message":"491","line":38,"column":6,"nodeType":"488","endLine":38,"endColumn":8,"suggestions":"554"},{"ruleId":"486","severity":1,"message":"491","line":38,"column":6,"nodeType":"488","endLine":38,"endColumn":8,"suggestions":"555"},{"ruleId":"504","severity":1,"message":"505","line":34,"column":42,"nodeType":"506","messageId":"507","endLine":34,"endColumn":44},{"ruleId":"504","severity":1,"message":"505","line":68,"column":45,"nodeType":"506","messageId":"507","endLine":68,"endColumn":47},{"ruleId":"504","severity":1,"message":"505","line":83,"column":40,"nodeType":"506","messageId":"507","endLine":83,"endColumn":42},{"ruleId":"504","severity":1,"message":"505","line":112,"column":42,"nodeType":"506","messageId":"507","endLine":112,"endColumn":44},{"ruleId":"504","severity":1,"message":"505","line":128,"column":38,"nodeType":"506","messageId":"507","endLine":128,"endColumn":40},{"ruleId":"482","severity":1,"message":"483","line":47,"column":10,"nodeType":"484","messageId":"485","endLine":47,"endColumn":15},{"ruleId":"486","severity":1,"message":"487","line":80,"column":6,"nodeType":"488","endLine":80,"endColumn":16,"suggestions":"556"},{"ruleId":"486","severity":1,"message":"508","line":23,"column":6,"nodeType":"488","endLine":23,"endColumn":8,"suggestions":"557"},{"ruleId":"520","severity":1,"message":"521","line":141,"column":17,"nodeType":"522","messageId":"523","endLine":141,"endColumn":28},{"ruleId":"486","severity":1,"message":"495","line":37,"column":6,"nodeType":"488","endLine":37,"endColumn":8,"suggestions":"558"},{"ruleId":"504","severity":1,"message":"505","line":112,"column":33,"nodeType":"506","messageId":"507","endLine":112,"endColumn":35},{"ruleId":"504","severity":1,"message":"505","line":331,"column":47,"nodeType":"506","messageId":"507","endLine":331,"endColumn":49},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'performRedirect'. Either include it or remove the dependency array.","ArrayExpression",["559"],"'AdminRoute' is defined but never used.","React Hook useEffect has a missing dependency: 'loadAllProduct'. Either include it or remove the dependency array.",["560"],["561"],["562"],"React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.",["563"],"'React' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-native-reassign",["564"],"no-negated-in-lhs",["565"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props.cartItem.productDetails.productQuantity'. Either include it or remove the dependency array. If 'setNumberOfItems' needs the current value of 'props.cartItem.productDetails.productQuantity', you can also switch to useReducer instead of useState and read 'props.cartItem.productDetails.productQuantity' in the reducer.",["566"],["564"],["565"],"'loadAllItems' is defined but never used.","'cartEmpty' is defined but never used.","'Link' is defined but never used.","'Stripe' is defined but never used.","'API' is defined but never used.","'createOrder' is defined but never used.",["564"],["565"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral",["567"],["568"],["569"],["570"],["571"],["572"],["573"],["574"],["575"],["576"],["577"],["564"],["565"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["578"],["579"],["580"],["581"],["582"],["583"],["584"],["585"],["586"],["587"],"'ListGroupItem' is defined but never used.",["588"],["589"],["590"],["591"],["592"],["593"],["594"],{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"597","fix":"599"},{"desc":"597","fix":"600"},{"desc":"601","fix":"602"},"no-global-assign","no-unsafe-negation",{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"597","fix":"607"},{"desc":"597","fix":"608"},{"desc":"597","fix":"609"},{"desc":"597","fix":"610"},{"desc":"597","fix":"611"},{"desc":"597","fix":"612"},{"desc":"597","fix":"613"},{"desc":"597","fix":"614"},{"desc":"597","fix":"615"},{"desc":"597","fix":"616"},{"desc":"597","fix":"617"},{"desc":"597","fix":"618"},{"desc":"597","fix":"619"},{"desc":"597","fix":"620"},{"desc":"597","fix":"621"},{"desc":"597","fix":"622"},{"desc":"597","fix":"623"},{"desc":"597","fix":"624"},{"desc":"597","fix":"625"},{"desc":"597","fix":"626"},{"desc":"601","fix":"627"},{"desc":"597","fix":"628"},{"desc":"597","fix":"629"},{"desc":"597","fix":"630"},{"desc":"595","fix":"631"},{"desc":"603","fix":"632"},{"desc":"605","fix":"633"},"Update the dependencies array to be: [performRedirect, redirect]",{"range":"634","text":"635"},"Update the dependencies array to be: [loadAllProduct]",{"range":"636","text":"637"},{"range":"638","text":"637"},{"range":"639","text":"637"},"Update the dependencies array to be: [preload, redirect]",{"range":"640","text":"641"},"Update the dependencies array to be: [props.cartItem.productDetails.productQuantity]",{"range":"642","text":"643"},"Update the dependencies array to be: [preload]",{"range":"644","text":"645"},{"range":"646","text":"637"},{"range":"647","text":"637"},{"range":"648","text":"637"},{"range":"649","text":"637"},{"range":"650","text":"637"},{"range":"651","text":"637"},{"range":"652","text":"637"},{"range":"653","text":"637"},{"range":"654","text":"637"},{"range":"655","text":"637"},{"range":"656","text":"637"},{"range":"657","text":"637"},{"range":"658","text":"637"},{"range":"659","text":"637"},{"range":"660","text":"637"},{"range":"661","text":"637"},{"range":"662","text":"637"},{"range":"663","text":"637"},{"range":"664","text":"637"},{"range":"665","text":"637"},{"range":"666","text":"641"},{"range":"667","text":"637"},{"range":"668","text":"637"},{"range":"669","text":"637"},{"range":"670","text":"635"},{"range":"671","text":"643"},{"range":"672","text":"645"},[1968,1978],"[performRedirect, redirect]",[1245,1247],"[loadAllProduct]",[1247,1249],[1243,1245],[3418,3428],"[preload, redirect]",[568,570],"[props.cartItem.productDetails.productQuantity]",[802,804],"[preload]",[1253,1255],[1253,1255],[1249,1251],[1244,1246],[1249,1251],[1249,1251],[1248,1250],[1248,1250],[1255,1257],[1244,1246],[1253,1255],[1249,1251],[1277,1279],[1278,1280],[1283,1285],[1279,1281],[1245,1247],[1274,1276],[1277,1279],[1278,1280],[2658,2668],[1273,1275],[1285,1287],[1274,1276],[1968,1978],[568,570],[802,804]]