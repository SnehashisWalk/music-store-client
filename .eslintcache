[{"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\index.js":"1","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\App.js":"2","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\HomeBar.js":"3","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\TopBar.js":"4","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\MyCarousel\\MyCarousel.js":"5","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\MyCarousel\\CarouselData.js":"6","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Categories\\Categories.js":"7","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Brands\\Brands.js":"8","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Footer\\Footer.js":"9","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Home.js":"10","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\Routes.js":"11","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\Guitars.js":"12","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Keyboards\\Keyboards.js":"13","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Drums\\Drums.js":"14","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\SignIn.js":"15","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\SignUp.js":"16","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\auth\\helper\\index.js":"17","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\backend.js":"18","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\auth\\helper\\AdminRoutes.js":"19","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\AdminDashboard.js":"20","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\auth\\helper\\PrivateRoutes.js":"21","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\UserDashboard.js":"22","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\Profile.js":"23","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\coreapicalls.js":"24","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\imageapicalls.js":"25","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\Cart.js":"26","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\CartUtility.js":"27","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\cartUtility.js":"28","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\CartItem.js":"29","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\StripeCheckout.js":"30","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\orderhelper.js":"31","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\RazorpayCheckout.js":"32","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\CreateCategories.js":"33","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\ManageCategories.js":"34","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\CreateProducts.js":"35","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\ManageProducts.js":"36","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\ManageOrders.js":"37","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\helper\\adminapicalls.js":"38","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Brands\\BrandsData.js":"39","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\ElectricGuitars.js":"40","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\AcousticGuitars.js":"41","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\BassGuitars.js":"42","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Pianos\\Pianos.js":"43","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Microphones\\Microphones.js":"44","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Softwares\\Softwares.js":"45","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Headphones\\Headphones.js":"46","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Amplifiers\\Amplifiers.js":"47","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Bluetooth Speakers\\BluetoothSpeakers.js":"48","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\DJ Gear\\DJGear.js":"49","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\helper\\userUtility.js":"50","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\checkout\\Checkout.js":"51"},{"size":201,"mtime":1614634159742,"results":"52","hashOfConfig":"53"},{"size":198,"mtime":1614634181831,"results":"54","hashOfConfig":"53"},{"size":167,"mtime":1614800870679,"results":"55","hashOfConfig":"53"},{"size":12503,"mtime":1616019672504,"results":"56","hashOfConfig":"53"},{"size":3321,"mtime":1614804414994,"results":"57","hashOfConfig":"53"},{"size":1743,"mtime":1614757549564,"results":"58","hashOfConfig":"53"},{"size":6952,"mtime":1615963329601,"results":"59","hashOfConfig":"53"},{"size":729,"mtime":1614803032590,"results":"60","hashOfConfig":"53"},{"size":2355,"mtime":1615494401019,"results":"61","hashOfConfig":"53"},{"size":549,"mtime":1614635541083,"results":"62","hashOfConfig":"53"},{"size":3537,"mtime":1616129983167,"results":"63","hashOfConfig":"53"},{"size":7788,"mtime":1616015992883,"results":"64","hashOfConfig":"53"},{"size":7023,"mtime":1616016602880,"results":"65","hashOfConfig":"53"},{"size":7007,"mtime":1616016114928,"results":"66","hashOfConfig":"53"},{"size":4441,"mtime":1615334946199,"results":"67","hashOfConfig":"53"},{"size":4008,"mtime":1615336206132,"results":"68","hashOfConfig":"53"},{"size":1375,"mtime":1615242729383,"results":"69","hashOfConfig":"53"},{"size":51,"mtime":1612908051565,"results":"70","hashOfConfig":"53"},{"size":524,"mtime":1612983911997,"results":"71","hashOfConfig":"53"},{"size":175,"mtime":1612981003038,"results":"72","hashOfConfig":"53"},{"size":487,"mtime":1612984037238,"results":"73","hashOfConfig":"53"},{"size":170,"mtime":1612984199590,"results":"74","hashOfConfig":"53"},{"size":23769,"mtime":1616133454281,"results":"75","hashOfConfig":"53"},{"size":230,"mtime":1614421512201,"results":"76","hashOfConfig":"53"},{"size":227,"mtime":1613254851179,"results":"77","hashOfConfig":"53"},{"size":6589,"mtime":1616131222274,"results":"78","hashOfConfig":"53"},{"size":3033,"mtime":1613672248741,"results":"79","hashOfConfig":"53"},{"size":5247,"mtime":1616151203096,"results":"80","hashOfConfig":"53"},{"size":4447,"mtime":1615246518244,"results":"81","hashOfConfig":"53"},{"size":2855,"mtime":1615217269495,"results":"82","hashOfConfig":"53"},{"size":749,"mtime":1616149176260,"results":"83","hashOfConfig":"53"},{"size":2744,"mtime":1614420232044,"results":"84","hashOfConfig":"53"},{"size":8293,"mtime":1615498884106,"results":"85","hashOfConfig":"53"},{"size":15659,"mtime":1614601919624,"results":"86","hashOfConfig":"53"},{"size":8050,"mtime":1616108296254,"results":"87","hashOfConfig":"53"},{"size":1035,"mtime":1615512491072,"results":"88","hashOfConfig":"53"},{"size":480,"mtime":1614425407501,"results":"89","hashOfConfig":"53"},{"size":1775,"mtime":1616124739126,"results":"90","hashOfConfig":"53"},{"size":3315,"mtime":1614795771529,"results":"91","hashOfConfig":"53"},{"size":7082,"mtime":1616015942602,"results":"92","hashOfConfig":"53"},{"size":6988,"mtime":1616015889153,"results":"93","hashOfConfig":"53"},{"size":6972,"mtime":1616015917452,"results":"94","hashOfConfig":"53"},{"size":7011,"mtime":1616015811152,"results":"95","hashOfConfig":"53"},{"size":7031,"mtime":1616015785924,"results":"96","hashOfConfig":"53"},{"size":7023,"mtime":1616015841133,"results":"97","hashOfConfig":"53"},{"size":7027,"mtime":1616015608476,"results":"98","hashOfConfig":"53"},{"size":7027,"mtime":1616017393998,"results":"99","hashOfConfig":"53"},{"size":7057,"mtime":1616018537212,"results":"100","hashOfConfig":"53"},{"size":7013,"mtime":1616018962553,"results":"101","hashOfConfig":"53"},{"size":898,"mtime":1616133254928,"results":"102","hashOfConfig":"53"},{"size":18586,"mtime":1616151891330,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1cgl8m5",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"106"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"106"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"106"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"106"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\index.js",[],["238","239"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\App.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\HomeBar.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\TopBar.js",["240","241"],"import React, { useState, useLayoutEffect, useEffect } from \"react\";\r\nimport \"./topbar.css\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n  NavItem,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport SignIn from \"../user/SignIn\";\r\nimport SignUp from \"../user/SignUp\";\r\nimport {\r\n  authenticate,\r\n  isAuthenticated,\r\n  signin,\r\n  signout,\r\n} from \"../auth/helper/index\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport {\r\n  cartEmpty,\r\n  cartItemCount,\r\n  saveUserCartItemsToDB,\r\n} from \"../cart/cartUtility\";\r\nimport { BsMusicNoteList } from \"react-icons/bs\";\r\n\r\nconst useWindowSize = () => {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n  return size;\r\n};\r\n\r\nconst TopBar = ({ history }) => {\r\n  const [signInModalShow, setSignInModalShow] = useState(false);\r\n  const [signUpModalShow, setSignUpModalShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // console.log(useWindowSize()[0]);\r\n\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const redirectToProfilePage = () => {\r\n    const path = \"/profile\";\r\n    if (isAuthenticated()) {\r\n      history.push(path);\r\n    }\r\n  };\r\n\r\n  const redirectToCartPage = () => {\r\n    const path = \"/cart\";\r\n    if (isAuthenticated()) {\r\n      history.push(path);\r\n    }\r\n  };\r\n\r\n  /*\r\n  ********************************\r\n  HANDLE DEMO ACCOUNT\r\n  ********************************\r\n  */\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      performRedirect();\r\n    }, 200);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [redirect]);\r\n\r\n  const handleDemoAccount = () => {\r\n    const USER_EMAIL_ID = \"jason@gmail.com\";\r\n    const USER_PASSWORD = \"12345\";\r\n    setLoading(true);\r\n    signin({ email: USER_EMAIL_ID, password: USER_PASSWORD })\r\n      .then((data) => {\r\n        if (data.errors) {\r\n          setRedirect(false);\r\n          setLoading(false);\r\n          setError(data.errors[0].msg);\r\n        } else if (data.error) {\r\n          setRedirect(false);\r\n          setLoading(false);\r\n          setError(data.error);\r\n        } else {\r\n          authenticate(data);\r\n          if (isAuthenticated()) {\r\n            setRedirect(true);\r\n            setLoading(true);\r\n            setError(false);\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"signin in request failed\", error));\r\n  };\r\n\r\n  const performRedirect = () => {\r\n    if (redirect && localStorage.getItem(\"cartItems\")) {\r\n      setRedirect(false);\r\n      setLoading(false);\r\n      window.location.href = \"/\";\r\n    }\r\n  };\r\n  /*\r\n   *********************************\r\n   */\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        style={{ backgroundColor: \"whitesmoke\" }}\r\n        expand=\"lg\"\r\n        className=\"px-5\"\r\n      >\r\n        <Navbar.Brand className=\"font-weight-bold\" href=\"/\">\r\n          <BsMusicNoteList color=\"red\" /> Music Store\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          {useWindowSize()[0] > 992 ? (\r\n            <Nav className=\"px-5\">\r\n              {isAuthenticated() ? (\r\n                <>\r\n                  <Nav.Link\r\n                    onClick={() => {\r\n                      redirectToProfilePage();\r\n                    }}\r\n                  >\r\n                    {user.role === 1 ? \"Admin\" : user.name}\r\n                  </Nav.Link>\r\n                  <Nav.Link\r\n                    onClick={() => {\r\n                      signout(() => {\r\n                        saveUserCartItemsToDB(user._id, token);\r\n                        cartEmpty();\r\n                        window.location.href = \"/\";\r\n                      });\r\n                    }}\r\n                  >\r\n                    Sign Out\r\n                  </Nav.Link>\r\n                  {user.role !== 1 ? (\r\n                    <Button onClick={redirectToCartPage}>\r\n                      {redirect ? (\r\n                        \"Cart...\"\r\n                      ) : (\r\n                        <>\r\n                          <AiOutlineShoppingCart /> Cart{\" \"}\r\n                          <Badge variant=\"light\">{cartItemCount()}</Badge>\r\n                        </>\r\n                      )}\r\n                    </Button>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Button\r\n                    className=\"mr-1\"\r\n                    variant={!loading ? \"outline-dark\" : \"dark\"}\r\n                    onClick={() => {\r\n                      handleDemoAccount();\r\n                    }}\r\n                  >\r\n                    {!loading ? (\r\n                      \"Demo Account\"\r\n                    ) : (\r\n                      <>\r\n                        Demo Account ...\r\n                        <Spinner size=\"sm\" animation=\"grow\"></Spinner>\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    className=\"mr-1\"\r\n                    variant=\"outline-dark\"\r\n                    onClick={() => setSignInModalShow(true)}\r\n                  >\r\n                    Signin\r\n                  </Button>\r\n                  ``\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className=\"font-weight-bold\"\r\n                    onClick={() => setSignUpModalShow(true)}\r\n                  >\r\n                    Signup\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Nav>\r\n          ) : (\r\n            <Nav>\r\n              {isAuthenticated() ? (\r\n                <>\r\n                  <NavDropdown.Item\r\n                    style={{ color: \"#007bff\" }}\r\n                    onClick={() => {\r\n                      redirectToProfilePage();\r\n                    }}\r\n                  >\r\n                    {user.role === 1 ? \"Admin\" : user.name}\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item\r\n                    onClick={() => {\r\n                      signout(() => {\r\n                        cartEmpty();\r\n                        window.location.href = \"/\";\r\n                      });\r\n                    }}\r\n                  >\r\n                    Sign Out\r\n                  </NavDropdown.Item>\r\n                  {user.role !== 1 ? (\r\n                    <NavDropdown.Item onClick={redirectToCartPage}>\r\n                      <AiOutlineShoppingCart /> Cart{\" \"}\r\n                      <Badge variant=\"primary\">{cartItemCount()}</Badge>\r\n                    </NavDropdown.Item>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <NavDropdown title=\"Signin/Signup\">\r\n                    <NavDropdown.Item onClick={() => setSignInModalShow(true)}>\r\n                      Signin\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Item\r\n                      className=\"font-weight-bold\"\r\n                      onClick={() => setSignUpModalShow(true)}\r\n                    >\r\n                      Signup\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                  <NavItem\r\n                    className=\"mr-1\"\r\n                    style={{ color: \"#007bff\" }}\r\n                    onClick={() => {\r\n                      handleDemoAccount();\r\n                    }}\r\n                  >\r\n                    {!loading ? (\r\n                      \"Demo Account\"\r\n                    ) : (\r\n                      <>\r\n                        Demo Account ...\r\n                        <Spinner size=\"sm\" animation=\"grow\"></Spinner>\r\n                      </>\r\n                    )}\r\n                  </NavItem>\r\n                </>\r\n              )}\r\n\r\n              <NavDropdown.Divider></NavDropdown.Divider>\r\n              <NavDropdown title=\"Musical Instruments\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/collections/guitars\">\r\n                  Guitars\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/collections/pianos\">\r\n                  Keyboards & Pianos\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/collections/ \">\r\n                  Drums & Percussions\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <NavDropdown title=\"Studio Recording\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/collections/microphones\">\r\n                  Microphones\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/collections/softwares\">\r\n                  Software & Plugins\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/collections/amplifiers\">\r\n                  Amplifiers\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <NavDropdown\r\n                title=\"Personal / Home Audio\"\r\n                id=\"basic-nav-dropdown\"\r\n              >\r\n                <NavDropdown.Item href=\"/collections/headphones\">\r\n                  Headphones\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/collections/bluetooth-speakers\">\r\n                  Bluetooth Speakers\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <NavDropdown title=\"DJ / Live Sound\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/collections/dj-gear\">\r\n                  DJ Gear\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      {/* \r\n        ************************************************\r\n        SECOND NAVBAR FOR LARGE SCREEN \r\n        ************************************************        \r\n       */}\r\n      {useWindowSize()[0] > 992 ? (\r\n        <Navbar\r\n          style={{ backgroundColor: \"whitesmoke\" }}\r\n          expand=\"lg\"\r\n          className=\"px-5\"\r\n        >\r\n          <Nav style={{ width: \"100%\", justifyContent: \"space-around\" }}>\r\n            <NavDropdown title=\"Musical Instruments\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/collections/guitars\">\r\n                Guitars\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/collections/keyboards\">\r\n                Keyboards\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/collections/pianos\">\r\n                Pianos\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/collections/drums\">\r\n                Drums & Percussions\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <NavDropdown title=\"Studio Recording\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/collections/microphones\">\r\n                Microphones\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/collections/softwares\">\r\n                Software & Plugins\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/collections/amplifiers\">\r\n                Amplifiers\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <NavDropdown title=\"Personal / Home Audio\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/collections/headphones\">\r\n                Headphones\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/collections/bluetooth-speakers\">\r\n                Bluetooth Speakers\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <NavDropdown title=\"DJ / Live Sound\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/collections/dj-gear\">\r\n                DJ Gear\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <SignIn show={signInModalShow} onHide={() => setSignInModalShow(false)} />\r\n      <SignUp show={signUpModalShow} onHide={() => setSignUpModalShow(false)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(TopBar);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\MyCarousel\\MyCarousel.js",["242","243"],"import React, { useState, useLayoutEffect } from \"react\";\r\nimport { CarouselData } from \"./CarouselData\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nconst useWindowSize = () => {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n  return size;\r\n};\r\n\r\nconst MyCarousel = () => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const [customWidth, customHeight] = useWindowSize();\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  // console.log(\"PLATFORM\", navigator.platform);\r\n\r\n  return (\r\n    <Col className=\"d-flex justify-content-center\">\r\n      {navigator.platform == \"Win32\" ? (\r\n        <>\r\n          <Carousel\r\n            activeIndex={index}\r\n            onSelect={handleSelect}\r\n            className=\"d-block active mx-5 my-3\"\r\n            style={{\r\n              width:\r\n                customHeight > 500\r\n                  ? \"100%\"\r\n                  : customHeight > 430\r\n                  ? \"80%\"\r\n                  : customHeight > 400\r\n                  ? \"75%\"\r\n                  : \"60%\",\r\n              height:\r\n                customWidth > 768\r\n                  ? \"75vh\"\r\n                  : customWidth > 576\r\n                  ? \"50vh\"\r\n                  : \"100vh\",\r\n            }}\r\n          >\r\n            {CarouselData.map((carouselItem, index) => {\r\n              return (\r\n                <Carousel.Item key={index}>\r\n                  <img\r\n                    className=\"d-none d-sm-block\"\r\n                    src={carouselItem.imageDesktop}\r\n                    alt={carouselItem.title}\r\n                    title=\"New Releases\"\r\n                    style={{\r\n                      width: customWidth > 768 ? \"inherit\" : \"\",\r\n                      height:\r\n                        customWidth > 768\r\n                          ? \"75vh\"\r\n                          : customWidth > 576\r\n                          ? \"50vh\"\r\n                          : \"100vh\",\r\n                    }}\r\n                  />\r\n                  <img\r\n                    className=\"d-block d-sm-none\"\r\n                    alt={carouselItem.title}\r\n                    src={carouselItem.imageMobile}\r\n                    title=\"New Releases\"\r\n                    style={{ height: \"100vh\" }}\r\n                  />\r\n                </Carousel.Item>\r\n              );\r\n            })}\r\n          </Carousel>\r\n        </>\r\n      ) : (\r\n        <Carousel\r\n          activeIndex={index}\r\n          onSelect={handleSelect}\r\n          className=\"d-lg-none active m-3\"\r\n          style={{ height: \"50vh\" }}\r\n        >\r\n          {CarouselData.map((carouselItem, index) => {\r\n            return (\r\n              <Carousel.Item key={index}>\r\n                <img\r\n                  src={carouselItem.imageMobile}\r\n                  title=\"New Releases\"\r\n                  style={{ height: \"50vh\" }}\r\n                />\r\n              </Carousel.Item>\r\n            );\r\n          })}\r\n        </Carousel>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default MyCarousel;\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\MyCarousel\\CarouselData.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Categories\\Categories.js",["244"],"import React from \"react\";\r\nimport { Card, Col, Container, Row, CardDeck } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst Categories = ({ history }) => {\r\n  const handleClick = () => {\r\n    alert(\"clicked\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: \"center\", margin: \"3rem\" }}>\r\n        <h3>Popular Categories</h3>\r\n      </div>\r\n\r\n      <Container>\r\n        <Row className=\"d-flex justify-content-center\">\r\n          <CardDeck>\r\n            <Col\r\n              lg={3}\r\n              md={6}\r\n              sm={6}\r\n              xs={12}\r\n              className=\"d-flex justify-content-center\"\r\n            >\r\n              <Card\r\n                style={{\r\n                  width: \"15rem\",\r\n                  cursor: \"pointer\",\r\n                  border: \"none\",\r\n                }}\r\n                onClick={() => {\r\n                  history.push(\"/collections/electric-guitars\");\r\n                }}\r\n              >\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src=\"https://images.pexels.com/photos/6580251/pexels-photo-6580251.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                />\r\n                <Card.Body style={{ textAlign: \"center\" }}>\r\n                  <Card.Title>Electric Guitars</Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col\r\n              lg={3}\r\n              md={6}\r\n              sm={6}\r\n              xs={12}\r\n              className=\"d-flex justify-content-center\"\r\n            >\r\n              <Card\r\n                style={{ width: \"15rem\", cursor: \"pointer\", border: \"none\" }}\r\n                onClick={() => {\r\n                  history.push(\"/collections/acoustic-guitars\");\r\n                }}\r\n              >\r\n                <Card.Img src=\"https://images.unsplash.com/photo-1589471861110-1144cd568519?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80\" />\r\n                <Card.Body style={{ textAlign: \"center\" }}>\r\n                  <Card.Title>Acoustic Guitars</Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col\r\n              lg={3}\r\n              md={6}\r\n              sm={6}\r\n              xs={12}\r\n              className=\"d-flex justify-content-center\"\r\n            >\r\n              <Card\r\n                style={{ width: \"15rem\", cursor: \"pointer\", border: \"none\" }}\r\n                onClick={() => {\r\n                  history.push(\"/collections/keyboards\");\r\n                }}\r\n              >\r\n                <Card.Img src=\"https://images.unsplash.com/photo-1523297554394-dc159677ffe1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80\" />\r\n                <Card.Body style={{ textAlign: \"center\" }}>\r\n                  <Card.Title>Keyboards</Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col\r\n              lg={3}\r\n              md={6}\r\n              sm={6}\r\n              xs={12}\r\n              className=\"d-flex justify-content-center\"\r\n            >\r\n              <Card\r\n                style={{ width: \"15rem\", cursor: \"pointer\", border: \"none\" }}\r\n                onClick={() => {\r\n                  history.push(\"/collections/drums\");\r\n                }}\r\n              >\r\n                <Card.Img src=\"https://images.unsplash.com/photo-1583916589930-3984a53bf8a4?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80\" />\r\n                <Card.Body style={{ textAlign: \"center\" }}>\r\n                  <Card.Title>Drums</Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </CardDeck>\r\n\r\n          <CardDeck>\r\n            <Col\r\n              lg={3}\r\n              md={6}\r\n              sm={6}\r\n              xs={12}\r\n              className=\"d-flex justify-content-center\"\r\n            >\r\n              <Card\r\n                style={{ width: \"15rem\", cursor: \"pointer\", border: \"none\" }}\r\n                onClick={() => {\r\n                  history.push(\"/collections/microphones\");\r\n                }}\r\n              >\r\n                <Card.Img src=\"https://images.pexels.com/photos/352505/pexels-photo-352505.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\" />\r\n                <Card.Body style={{ textAlign: \"center\" }}>\r\n                  <Card.Title>Microphones</Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col\r\n              lg={3}\r\n              md={6}\r\n              sm={6}\r\n              xs={12}\r\n              className=\"d-flex justify-content-center\"\r\n            >\r\n              <Card\r\n                style={{ width: \"15rem\", cursor: \"pointer\", border: \"none\" }}\r\n                onClick={() => {\r\n                  history.push(\"/collections/violins\");\r\n                }}\r\n              >\r\n                <Card.Img src=\"https://images.unsplash.com/photo-1508025690966-2a9a1957da31?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80\" />\r\n                <Card.Body style={{ textAlign: \"center\" }}>\r\n                  <Card.Title>Violins</Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col\r\n              lg={3}\r\n              md={6}\r\n              sm={6}\r\n              xs={12}\r\n              className=\"d-flex justify-content-center\"\r\n            >\r\n              <Card\r\n                style={{ width: \"15rem\", cursor: \"pointer\", border: \"none\" }}\r\n                onClick={() => {\r\n                  history.push(\"/collections/pianos\");\r\n                }}\r\n              >\r\n                <Card.Img src=\"https://images.pexels.com/photos/5427085/pexels-photo-5427085.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\" />\r\n                <Card.Body style={{ textAlign: \"center\" }}>\r\n                  <Card.Title>Pianos</Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col\r\n              lg={3}\r\n              md={6}\r\n              sm={6}\r\n              xs={12}\r\n              className=\"d-flex justify-content-center\"\r\n            >\r\n              <Card\r\n                style={{ width: \"15rem\", cursor: \"pointer\", border: \"none\" }}\r\n                onClick={() => {\r\n                  history.push(\"/collections/softwares\");\r\n                }}\r\n              >\r\n                <Card.Img src=\"https://images.pexels.com/photos/4167169/pexels-photo-4167169.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\" />\r\n                <Card.Body style={{ textAlign: \"center\" }}>\r\n                  <Card.Title>Softwares</Card.Title>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </CardDeck>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Categories);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Brands\\Brands.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Footer\\Footer.js",["245","246","247","248"],"import React from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport {\r\n  FaFacebook,\r\n  FaDiscord,\r\n  FaGooglePlus,\r\n  FaInstagram,\r\n} from \"react-icons/fa\";\r\nimport { BiCopyright } from \"react-icons/bi\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Container\r\n      fluid\r\n      className=\"mx-0\"\r\n      style={{\r\n        marginTop: \"8rem\",\r\n        backgroundColor: \"whitesmoke\",\r\n      }}\r\n    >\r\n      <Row className=\"mx-3\">\r\n        <Col className=\"my-5\">\r\n          <h5>Store Information</h5>\r\n          <ul style={{ listStyle: \"none\", padding: \"0\", lineHeight: \"250%\" }}>\r\n            <li>About us</li>\r\n            <li>Contact us</li>\r\n            <li>Buy with Confidence</li>\r\n            <li>Career Opportunities</li>\r\n          </ul>\r\n        </Col>\r\n        <Col className=\"my-5\">\r\n          <h5>Services Support</h5>\r\n          <ul style={{ listStyle: \"none\", padding: \"0\", lineHeight: \"250%\" }}>\r\n            <li>Order Lookup</li>\r\n            <li>View all Manufacturers</li>\r\n            <li>Frequently Asked Questions</li>\r\n          </ul>\r\n        </Col>\r\n        <Col className=\"my-5\">\r\n          <h5>Hot Deals</h5>\r\n          <ul style={{ listStyle: \"none\", padding: \"0\", lineHeight: \"250%\" }}>\r\n            <li>Keyboard Deals</li>\r\n            <li>Guitar Deals</li>\r\n            <li>Drum Deals</li>\r\n            <li>DJ Deals</li>\r\n          </ul>\r\n        </Col>\r\n        <Col className=\"my-5\">\r\n          <h5>Follow us on social media!</h5>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n            }}\r\n          >\r\n            <a href=\"\" style={{ margin: \"2px\", flex: \"1\" }}>\r\n              <FaFacebook />\r\n            </a>\r\n            <a href=\"\" style={{ margin: \"2px\", flex: \"1\" }}>\r\n              <FaDiscord />\r\n            </a>\r\n            <a href=\"\" style={{ margin: \"2px\", flex: \"1\" }}>\r\n              <FaGooglePlus />\r\n            </a>\r\n            <a href=\"\" style={{ margin: \"2px\", flex: \"1\" }}>\r\n              <FaInstagram />\r\n            </a>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mx-3\">\r\n        <Col className=\"mb-5\">\r\n          <h6>\r\n            Copyright <BiCopyright /> 2021 Music Store\r\n          </h6>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Home.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\Routes.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\Guitars.js",["249"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Guitars = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  const items = () => {\r\n    let arr = [];\r\n    productsMap.forEach((value, key) => {\r\n      if (key.search(\"Guitars\") > 0) {\r\n        arr.push(\r\n          <Container className=\"mx-5\">\r\n            <Row className=\"d-block my-5\">\r\n              <h4\r\n                style={{\r\n                  padding: \"5px 5px 5px 15px\",\r\n                  color: \"white\",\r\n                  backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  history.push(\r\n                    `/collections/${key.toLowerCase().replace(\" \", \"-\")}`\r\n                  );\r\n                }}\r\n              >\r\n                {key}\r\n              </h4>\r\n            </Row>\r\n            <Row>\r\n              {value.slice(0, 8).map((product, index) => {\r\n                return (\r\n                  <Col\r\n                    lg={3}\r\n                    md={4}\r\n                    sm={6}\r\n                    xs={12}\r\n                    className=\"p-3 text-center\"\r\n                    key={index}\r\n                  >\r\n                    <Card className=\"cardHover\">\r\n                      <Card.Body>\r\n                        {dataLoaded ? (\r\n                          <div\r\n                            style={{\r\n                              width: \"211px\",\r\n                              height: \"211px\",\r\n                              overflow: \"hidden\",\r\n                              margin: \"auto\",\r\n                            }}\r\n                          >\r\n                            <Card.Img\r\n                              variant=\"top\"\r\n                              src={getProductImages(product)}\r\n                            />\r\n                          </div>\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                        <h6>{dataLoaded ? product.name : <Skeleton />}</h6>\r\n                        <h5 style={{ color: \"#de0101\" }}>\r\n                          <FaRupeeSign />\r\n                          {dataLoaded ? (\r\n                            `${product.price.toLocaleString(\"hi-IN\")}`\r\n                          ) : (\r\n                            <Skeleton />\r\n                          )}\r\n                        </h5>\r\n                        {dataLoaded ? (\r\n                          <Button\r\n                            block\r\n                            style={{\r\n                              borderColor: \"white\",\r\n                              color: \"white\",\r\n                              background:\r\n                                \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                            }}\r\n                            onClick={() => {\r\n                              handleClick(product);\r\n                            }}\r\n                          >\r\n                            Add to Card\r\n                          </Button>\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </Container>\r\n        );\r\n      }\r\n    });\r\n    return arr;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      {dataLoaded ? (\r\n        items().map((ele, index) => <div key={index}>{ele}</div>)\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Guitars);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Keyboards\\Keyboards.js",["250"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Keyboards = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Keyboards\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Keyboards\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Keyboards);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Drums\\Drums.js",["251"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Drums = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Drums\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Drums\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Drums);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\SignIn.js",["252"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Form,\r\n  Alert,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { signin, isAuthenticated, authenticate } from \"../auth/helper/index\";\r\nimport {\r\n  loadUserCartItemsFromDB,\r\n  saveUserCartItemsToLocalStorage,\r\n} from \"../cart/cartUtility\";\r\n\r\nconst SignIn = (props) => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    loading: false,\r\n  });\r\n  const [redirect, setRedirect] = useState(false);\r\n  const { email, password, error, loading } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false, loading: true });\r\n    signin({ email, password })\r\n      .then((data) => {\r\n        if (data.errors) {\r\n          setValues({ ...values, error: data.errors[0].msg, loading: false });\r\n        } else if (data.error) {\r\n          setValues({ ...values, error: data.error, loading: false });\r\n        } else {\r\n          authenticate(data, () => {\r\n            setValues({\r\n              ...values,\r\n              email: \"\",\r\n              password: \"\",\r\n            });\r\n          });\r\n          setTimeout(() => {\r\n            setRedirect(true);\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"signin in request failed\", error));\r\n  };\r\n\r\n  const performRedirect = () => {\r\n    if (redirect) {\r\n      if (user && user.role === 1) {\r\n        window.location.href = \"/\";\r\n      } else {\r\n        window.location.href = \"/\";\r\n        //return <Redirect to=\"/\" />;\r\n      }\r\n    }\r\n  };\r\n\r\n  const signInForm = () => {\r\n    if (isAuthenticated() && !localStorage.getItem(\"cartItems\")) {\r\n      loadUserCartItemsFromDB(user._id, token).then((data) => {\r\n        saveUserCartItemsToLocalStorage(data);\r\n        setValues({ ...values, loading: false });\r\n      });\r\n    }\r\n    return (\r\n      <Modal\r\n        show={redirect ? false : props.show}\r\n        onHide={props.onHide}\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        onExit={() => {\r\n          setValues({ ...values, email: \"\", password: \"\", error: false });\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Signin</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <Alert\r\n                  variant=\"success\"\r\n                  style={{ display: loading ? \"\" : \"none\" }}\r\n                >\r\n                  Sign in Successful! Loading page...{\" \"}\r\n                  <Spinner animation=\"border\" />\r\n                </Alert>\r\n                <Alert\r\n                  variant=\"danger\"\r\n                  style={{ display: error ? \"\" : \"none\" }}\r\n                >\r\n                  {error}\r\n                </Alert>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      onChange={handleChange(\"email\")}\r\n                      value={email}\r\n                    />\r\n                    <Form.Text className=\"text-muted\">\r\n                      We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      onChange={handleChange(\"password\")}\r\n                      value={password}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Button variant=\"warning\" type=\"submit\" onClick={onSubmit}>\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {signInForm()} {performRedirect()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\SignUp.js",["253"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Alert } from \"react-bootstrap\";\r\nimport { signup } from \"../auth/helper\";\r\n\r\nconst SignUp = (props) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    success: \"\",\r\n  });\r\n  const { name, phoneNumber, email, password, error, success } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    console.log(\"NAME\", name);\r\n    console.log(\"EVENT\", event.target.value);\r\n    if (name === \"phoneNumber\" && event.target.value.length != 10)\r\n      setValues({\r\n        ...values,\r\n        [name]: event.target.value,\r\n        error: \"Please enter 10 digit phone number\",\r\n      });\r\n    else setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    signup({ name, phoneNumber, email, password })\r\n      .then((data) => {\r\n        if (data.errors) {\r\n          setValues({ ...values, error: data.errors[0].msg, success: false });\r\n        } else if (data.err) {\r\n          setValues({ ...values, error: data.err, success: false });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            phoneNumber: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            error: \"\",\r\n            success: true,\r\n          });\r\n        }\r\n      })\r\n      .catch(console.log(\"Error in signup\"));\r\n  };\r\n\r\n  const signUpForm = () => {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"md\"\r\n        centered\r\n        onExit={() => {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            phoneNumber: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            error: false,\r\n          });\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Signup</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Alert variant=\"success\" style={{ display: success ? \"\" : \"none\" }}>\r\n            Sign Up Successful! Please Sign in from home page.\r\n          </Alert>\r\n          <Alert variant=\"danger\" style={{ display: error ? \"\" : \"none\" }}>\r\n            {error}\r\n          </Alert>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                onChange={handleChange(\"name\")}\r\n                value={name}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Phone Number</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"+91 ...\"\r\n                onChange={handleChange(\"phoneNumber\")}\r\n                value={phoneNumber}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={handleChange(\"email\")}\r\n                value={email}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={handleChange(\"password\")}\r\n                value={password}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button onClick={onSubmit} variant=\"warning\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return <>{signUpForm()}</>;\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\auth\\helper\\index.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\backend.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\auth\\helper\\AdminRoutes.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\AdminDashboard.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\auth\\helper\\PrivateRoutes.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\UserDashboard.js",[],["254","255"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\Profile.js",["256","257"],"import React, { useState, useEffect } from \"react\";\r\nimport HomeBar from \"../core/HomeBar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  InputGroup,\r\n  FormControl,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Form,\r\n  Jumbotron,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { FaRupeeSign, FaPlus } from \"react-icons/fa\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport Footer from \"../core/Footer/Footer\";\r\nimport \"./profile.css\";\r\nimport { userPurchaseList } from \"../core/helper/orderhelper\";\r\nimport { getProductImages } from \"../core/helper/imageapicalls\";\r\nimport CreateCategories from \"../admin/CreateCategories\";\r\nimport ManageCategories from \"../admin/ManageCategories\";\r\nimport CreateProducts from \"../admin/CreateProducts\";\r\nimport ManageProducts from \"../admin/ManageProducts\";\r\nimport ManageOrders from \"../admin/ManageOrders\";\r\nimport {\r\n  deleteUserAddress,\r\n  fetchUserAddresses,\r\n  saveUserAddresses,\r\n} from \"./helper/userUtility\";\r\n\r\nconst STATE_LIST = [\r\n  { _id: 1, state_name: \"Andaman & Nicobar Islands\" },\r\n  { _id: 2, state_name: \"Andhra Pradesh\" },\r\n  { _id: 3, state_name: \"Arunachal Pradesh\" },\r\n  { _id: 4, state_name: \"Assam\" },\r\n  { _id: 5, state_name: \"Bihar\" },\r\n  { _id: 6, state_name: \"Chandigarh\" },\r\n  { _id: 7, state_name: \"Chhattisgarh\" },\r\n  { _id: 8, state_name: \"Dadra & Nagar Haveli & Daman & Diu\" },\r\n  { _id: 9, state_name: \"Delhi\" },\r\n  { _id: 10, state_name: \"Goa\" },\r\n  { _id: 11, state_name: \"Gujarat\" },\r\n  { _id: 12, state_name: \"Haryana\" },\r\n  { _id: 13, state_name: \"Himachal Pradesh\" },\r\n  { _id: 14, state_name: \"Jammu & Kashmir\" },\r\n  { _id: 15, state_name: \"Jharkhand\" },\r\n  { _id: 16, state_name: \"Karnataka\" },\r\n  { _id: 17, state_name: \"Kerala\" },\r\n  { _id: 18, state_name: \"Ladakh\" },\r\n  { _id: 19, state_name: \"Lakshadweep\" },\r\n  { _id: 20, state_name: \"Madhya Pradesh\" },\r\n  { _id: 21, state_name: \"Maharashtra\" },\r\n  { _id: 22, state_name: \"Manipur\" },\r\n  { _id: 23, state_name: \"Meghalaya\" },\r\n  { _id: 24, state_name: \"Mizoram\" },\r\n  { _id: 25, state_name: \"Nagaland\" },\r\n  { _id: 26, state_name: \"Odisha\" },\r\n  { _id: 27, state_name: \"Puducherry\" },\r\n  { _id: 28, state_name: \"Punjab\" },\r\n  { _id: 29, state_name: \"Rajasthan\" },\r\n  { _id: 30, state_name: \"Sikkim\" },\r\n  { _id: 31, state_name: \"Tamil Nadu\" },\r\n  { _id: 32, state_name: \"Telangana\" },\r\n  { _id: 33, state_name: \"Tripura\" },\r\n  { _id: 34, state_name: \"Uttarakhand\" },\r\n  { _id: 35, state_name: \"Uttar Pradesh\" },\r\n  { _id: 36, state_name: \"West Bengal\" },\r\n];\r\n\r\nconst Profile = () => {\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    isAuthenticated();\r\n    preload();\r\n  }, [redirect]);\r\n\r\n  const { user } = isAuthenticated();\r\n  const userToken = isAuthenticated() && isAuthenticated().token;\r\n  const userId = isAuthenticated() && isAuthenticated().user._id;\r\n\r\n  const [btn1, setBtn1] = useState(true);\r\n  const [btn2, setBtn2] = useState(false);\r\n  const [btn3, setBtn3] = useState(false);\r\n  const [btn4, setBtn4] = useState(false);\r\n  const [btn5, setBtn5] = useState(false);\r\n  const [btn6, setBtn6] = useState(false);\r\n\r\n  const [purchaseList, setPurchaseList] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [fetchedUserAddresses, setFetchedUserAddresses] = useState([]);\r\n\r\n  const preload = async () => {\r\n    const userAddresses = await fetchUserAddresses(userId, userToken);\r\n    setFetchedUserAddresses(userAddresses);\r\n  };\r\n\r\n  const loadUserPurchaseList = async () => {\r\n    await userPurchaseList(userId, userToken)\r\n      .then((data) => {\r\n        setPurchaseList(data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [addressValues, setAddressValues] = useState({\r\n    name: \"\",\r\n    mobileNo: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    pincode: \"\",\r\n    alternatePhone: \"\",\r\n    addressType: \"\",\r\n  });\r\n\r\n  const handleChange = (field) => (event) => {\r\n    const value = event.target.value;\r\n    console.log(value);\r\n    setAddressValues({ ...addressValues, [field]: value });\r\n    console.log(addressValues);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let data = await saveUserAddresses(userId, userToken, addressValues);\r\n    if (data?.error) {\r\n      console.log(data.error);\r\n    } else {\r\n      setAddressValues({\r\n        name: \"\",\r\n        mobileNo: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        pincode: \"\",\r\n        alternatePhone: \"\",\r\n        addressType: \"\",\r\n      });\r\n      handleClose();\r\n      setRedirect(!redirect);\r\n      console.log(data.message);\r\n    }\r\n  };\r\n\r\n  const handleAddAddress = () => {\r\n    if (show) {\r\n      return (\r\n        <Jumbotron>\r\n          <div className=\"font-weight-bold text-primary mb-3\">\r\n            ADD A NEW ADDRESS\r\n          </div>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange(\"name\")}\r\n                  required\r\n                  type=\"text\"\r\n                  value={addressValues.name}\r\n                  placeholder=\"Name\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridMobileNo\">\r\n                <Form.Label>Mobile Number</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange(\"mobileNo\")}\r\n                  value={addressValues.mobileNo}\r\n                  required\r\n                  type=\"text\"\r\n                  pattern=\"[6789][0-9]{9}\"\r\n                  minLength=\"10\"\r\n                  maxLength=\"10\"\r\n                  placeholder=\"10-digit mobile number\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group controlId=\"formAddress\">\r\n              <Form.Label>Address</Form.Label>\r\n              <textarea\r\n                onChange={handleChange(\"address\")}\r\n                value={addressValues.address}\r\n                style={{ resize: \"none\" }}\r\n                required\r\n                rows=\"4\"\r\n                className=\"form-control\"\r\n                placeholder=\"Address (Area and Street)\"\r\n              ></textarea>\r\n            </Form.Group>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridName\">\r\n                <Form.Label>City/District/Town</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange(\"city\")}\r\n                  value={addressValues.city}\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"City/District/Town\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formState\">\r\n                <Form.Label>State</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange(\"state\")}\r\n                  value={addressValues.state}\r\n                  required\r\n                  as=\"select\"\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    --Select State--\r\n                  </option>\r\n                  {STATE_LIST.map(({ _id, state_name }) => {\r\n                    return (\r\n                      <option value={state_name} key={_id}>\r\n                        {state_name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formPincode\">\r\n                <Form.Label>Pincode</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange(\"pincode\")}\r\n                  value={addressValues.pincode}\r\n                  required\r\n                  type=\"text\"\r\n                  pattern=\"[0-9]{6}\"\r\n                  minLength=\"6\"\r\n                  maxLength=\"6\"\r\n                  placeholder=\"Pincode\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formAltContact\">\r\n                <Form.Label>Alternate Mobile Number</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange(\"alternatePhone\")}\r\n                  value={addressValues.alternatePhone}\r\n                  type=\"text\"\r\n                  pattern=\"[6789][0-9]{9}\"\r\n                  minLength=\"10\"\r\n                  maxLength=\"10\"\r\n                  placeholder=\"Alternate Phone (Optional)\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Label>Address Type</Form.Label>\r\n            <Form.Row className=\"mb-3\">\r\n              <Form.Group as={Col} controlId=\"formAddressType\">\r\n                <>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"Home\"\r\n                    name=\"address-type\"\r\n                    value=\"Home\"\r\n                    onChange={handleChange(\"addressType\")}\r\n                    className=\"mx-2\"\r\n                  />\r\n                  <label htmlFor=\"Home\">Home</label>\r\n\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"Work\"\r\n                    name=\"address-type\"\r\n                    value=\"Work\"\r\n                    onChange={handleChange(\"addressType\")}\r\n                    className=\"mx-2\"\r\n                  />\r\n                  <label htmlFor=\"Work\">Work</label>\r\n                </>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <div>\r\n              <Button type=\"submit\" className=\"px-5 mx-2\" variant=\"primary\">\r\n                Save\r\n              </Button>\r\n              <Button\r\n                className=\"px-5\"\r\n                onClick={handleClose}\r\n                variant=\"outline-primary\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Jumbotron>\r\n      );\r\n    }\r\n    return (\r\n      <Button onClick={handleShow}>\r\n        <FaPlus /> Add Address\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const handleDeleteClick = (addressId) => {\r\n    deleteUserAddress(userId, userToken, addressId);\r\n    setRedirect(!redirect);\r\n  };\r\n\r\n  const displayCard = () => {\r\n    if (btn1) {\r\n      return (\r\n        <Card style={{ width: \"100%\", margin: \"1rem\" }} className=\"shadow\">\r\n          <Card.Body>\r\n            <label>\r\n              <h4>Personal Information</h4>\r\n            </label>\r\n            <div className=\"mt-3\">\r\n              <label>Username</label>\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  placeholder={user.name}\r\n                  aria-label=\"Username\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  disabled\r\n                />\r\n              </InputGroup>\r\n\r\n              <label>\r\n                <h5>Email Address</h5>\r\n              </label>\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  placeholder={user.email}\r\n                  aria-label=\"Username\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  disabled\r\n                />\r\n              </InputGroup>\r\n              <label>\r\n                <h5>Mobile Number</h5>\r\n              </label>\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  placeholder={`+91-${user.phoneNumber}`}\r\n                  aria-label=\"Username\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  disabled\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n          </Card.Body>\r\n          <Card.Footer\r\n            style={{\r\n              background: \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n            }}\r\n          ></Card.Footer>\r\n        </Card>\r\n      );\r\n    } else if (btn2) {\r\n      if (user.role === 1) {\r\n        return <CreateCategories />;\r\n      }\r\n      return (\r\n        <Card style={{ width: \"100%\", margin: \"1rem\" }} className=\"shadow\">\r\n          <Card.Body>\r\n            <label>\r\n              <h4>Manage Addresses</h4>\r\n            </label>\r\n            <InputGroup>{handleAddAddress()}</InputGroup>\r\n            <h5 className=\"mt-3\">Saved Addresses</h5>\r\n            <InputGroup>\r\n              {fetchedUserAddresses.length === 0 ? (\r\n                <Card style={{ width: \"100%\" }}>\r\n                  <Card.Body>Please Add Address</Card.Body>\r\n                </Card>\r\n              ) : (\r\n                fetchedUserAddresses.map((address, index) => {\r\n                  return (\r\n                    <Card key={index} className=\"w-100 my-3\">\r\n                      <Card.Header className=\"font-weight-bold\">\r\n                        {address.addressType}\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        <Row>\r\n                          <Col lg={3} className=\"d-flex align-items-center \">\r\n                            <h6 className=\"mb-0 text-primary\">\r\n                              {address.name.toUpperCase()}\r\n                            </h6>\r\n                          </Col>\r\n                          <Col lg={3} className=\"d-flex align-items-center\">\r\n                            <h6 className=\"mb-0 text-primary\">\r\n                              {`+91-${address.mobileNo}`}\r\n                            </h6>\r\n                          </Col>\r\n                          <Col className=\"d-flex justify-content-end\">\r\n                            <Button\r\n                              onClick={() => {\r\n                                handleDeleteClick(address._id);\r\n                              }}\r\n                              variant=\"danger\"\r\n                            >\r\n                              DELETE\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"my-2\">\r\n                          <Col>{`${address.address}, ${address.city}, ${address.state} - ${address.pincode}.`}</Col>\r\n                        </Row>\r\n                        {address.alternatePhone !== \"\" ? (\r\n                          <Row>\r\n                            <Col>{`Alternate Contact Number: +91-${address.alternatePhone}`}</Col>\r\n                          </Row>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </Card.Body>\r\n                    </Card>\r\n                  );\r\n                })\r\n              )}\r\n            </InputGroup>\r\n          </Card.Body>\r\n          <Card.Footer\r\n            style={{\r\n              background: \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n            }}\r\n          />\r\n        </Card>\r\n      );\r\n    } else if (btn3) {\r\n      if (user.role === 1) {\r\n        return <ManageCategories />;\r\n      }\r\n      return (\r\n        <Card style={{ width: \"100%\", margin: \"1rem\" }} className=\"shadow\">\r\n          <Card.Body>\r\n            <label>\r\n              <h4>My Orders</h4>\r\n            </label>\r\n            {purchaseList.length > 0 ? (\r\n              purchaseList.map((item, index) => {\r\n                return (\r\n                  <Card\r\n                    key={index}\r\n                    style={{ width: \"100%\" }}\r\n                    className=\"cardHover m-2\"\r\n                  >\r\n                    <Container>\r\n                      <Row>\r\n                        <Col lg={3}>\r\n                          <Card.Img\r\n                            style={{ height: \"120px\", width: \"120px\" }}\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </Col>\r\n                        <Col lg={5}>\r\n                          <Card.Body>\r\n                            <Card.Text>{item.name}</Card.Text>\r\n                            <h6 style={{ color: \"grey\" }}>\r\n                              {item.description}\r\n                            </h6>\r\n                            <h6>\r\n                              <FaRupeeSign />\r\n                              {item.amount.toLocaleString(\"hi-IN\")}\r\n                            </h6>\r\n                          </Card.Body>\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                  </Card>\r\n                );\r\n              })\r\n            ) : (\r\n              <Card>No orders</Card>\r\n            )}\r\n          </Card.Body>\r\n          <Card.Footer\r\n            style={{\r\n              background: \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n            }}\r\n          />\r\n        </Card>\r\n      );\r\n    } else if (btn4) {\r\n      return <CreateProducts />;\r\n    } else if (btn5) {\r\n      return <ManageProducts />;\r\n    } else if (btn6) {\r\n      return <ManageOrders />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HomeBar />\r\n      <Container className=\"mt-4\">\r\n        <Row>\r\n          <Col lg={3} md={1} sm={3}>\r\n            <Row>\r\n              <Card\r\n                style={{ width: \"100%\", margin: \"1rem\" }}\r\n                className=\"shadow\"\r\n              >\r\n                <Card.Body>\r\n                  <Image\r\n                    src=\"https://www.pavilionweb.com/wp-content/uploads/2017/03/man-300x300.png\"\r\n                    style={{ width: \"50px\" }}\r\n                    rounded\r\n                  />{\" \"}\r\n                  Hello, {user.name}\r\n                  {user.role === 1 ? (\r\n                    <Card.Text className=\"text-center font-weight-bold\">\r\n                      Admin Access\r\n                    </Card.Text>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Card.Body>\r\n                <Card.Footer\r\n                  style={{\r\n                    background:\r\n                      \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n                  }}\r\n                />\r\n              </Card>\r\n            </Row>\r\n            <Row>\r\n              <Card\r\n                style={{ width: \"100%\", margin: \"1rem\" }}\r\n                className=\"shadow\"\r\n              >\r\n                <Card.Body>\r\n                  <ListGroup\r\n                    as=\"ul\"\r\n                    variant=\"flush\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <ListGroup.Item\r\n                      as=\"li\"\r\n                      className=\"onHover\"\r\n                      active={btn1}\r\n                      onClick={() => {\r\n                        setBtn1(true);\r\n                        setBtn2(false);\r\n                        setBtn3(false);\r\n                        setBtn4(false);\r\n                        setBtn5(false);\r\n                        setBtn6(false);\r\n                      }}\r\n                    >\r\n                      Profile Information\r\n                    </ListGroup.Item>\r\n                    {user.role !== 1 ? (\r\n                      <>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn2}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(true);\r\n                            setBtn3(false);\r\n                          }}\r\n                        >\r\n                          Manage Addresses\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn3}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(false);\r\n                            setBtn3(true);\r\n                            loadUserPurchaseList();\r\n                          }}\r\n                        >\r\n                          My Orders\r\n                        </ListGroup.Item>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn2}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(true);\r\n                            setBtn3(false);\r\n                            setBtn4(false);\r\n                            setBtn5(false);\r\n                            setBtn6(false);\r\n                          }}\r\n                        >\r\n                          Create Categories\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn3}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(false);\r\n                            setBtn3(true);\r\n                            setBtn4(false);\r\n                            setBtn5(false);\r\n                            setBtn6(false);\r\n                          }}\r\n                        >\r\n                          Manage Categories\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn4}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(false);\r\n                            setBtn3(false);\r\n                            setBtn4(true);\r\n                            setBtn5(false);\r\n                            setBtn6(false);\r\n                          }}\r\n                        >\r\n                          Create Products\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn5}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(false);\r\n                            setBtn3(false);\r\n                            setBtn4(false);\r\n                            setBtn5(true);\r\n                            setBtn6(false);\r\n                          }}\r\n                        >\r\n                          Manage Products\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item\r\n                          as=\"li\"\r\n                          className=\"onHover\"\r\n                          active={btn6}\r\n                          onClick={() => {\r\n                            setBtn1(false);\r\n                            setBtn2(false);\r\n                            setBtn3(false);\r\n                            setBtn4(false);\r\n                            setBtn5(false);\r\n                            setBtn6(true);\r\n                          }}\r\n                        >\r\n                          Manage Orders\r\n                        </ListGroup.Item>\r\n                      </>\r\n                    )}\r\n                  </ListGroup>\r\n                </Card.Body>\r\n                <Card.Footer\r\n                  style={{\r\n                    background:\r\n                      \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n                  }}\r\n                />\r\n              </Card>\r\n            </Row>\r\n          </Col>\r\n          <Col>\r\n            <Row>{displayCard()}</Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\coreapicalls.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\imageapicalls.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\Cart.js",["258","259"],"import React, { useState, useEffect } from \"react\";\r\nimport Footer from \"../core/Footer/Footer\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport {\r\n  getTotalPrice,\r\n  // cartItemCount,\r\n  // saveUserCartItems,\r\n  // loadUserCartItemsFromDB,\r\n  // saveUserCartItemsToLocalStorage,\r\n  loadUserCartItemsFromLocalStorage,\r\n} from \"./cartUtility\";\r\nimport CartItem from \"./CartItem\";\r\nimport { FaRupeeSign, FaShoppingCart } from \"react-icons/fa\";\r\nimport TopBar from \"../core/TopBar\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\n\r\nconst Cart = ({ history }) => {\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCartItems(loadUserCartItemsFromLocalStorage());\r\n  }, [reload]);\r\n\r\n  // console.log(\"USER CART\", cartItems);\r\n\r\n  const cartContent = () => {\r\n    return !cartItems[0] ? (\r\n      \"\"\r\n    ) : cartItems[0]?.cart?.length === 0 ? (\r\n      <Container className=\"mt-5\">\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <Card.Header\r\n                style={{\r\n                  color: \"white\",\r\n                  background: \"linear-gradient(45deg,#5433FF,#20BDFF,#A5FECB)\",\r\n                }}\r\n              >\r\n                My Cart\r\n              </Card.Header>\r\n\r\n              <Card.Body\r\n                style={{\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <FaShoppingCart />\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                  <Card.Title>Your cart is empty!</Card.Title>\r\n                  <Card.Title>Add items to it now.</Card.Title>\r\n                </div>\r\n                <Link to=\"/\">\r\n                  <Button\r\n                    className=\"px-5 py-3 mt-3\"\r\n                    style={{\r\n                      borderColor: \"white\",\r\n                      color: \"white\",\r\n                      background: \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                    }}\r\n                  >\r\n                    Shop Now\r\n                  </Button>\r\n                </Link>\r\n              </Card.Body>\r\n              <Card.Footer\r\n                style={{\r\n                  background: \"linear-gradient(45deg,#5433FF,#20BDFF,#A5FECB)\",\r\n                }}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    ) : (\r\n      <Container className=\"mt-5\">\r\n        <Row>\r\n          <Col lg={8} md={12} sm={12}>\r\n            <Card className=\"cardHover\">\r\n              <Card.Header\r\n                style={{\r\n                  color: \"white\",\r\n                  background: \"linear-gradient(45deg,#5433FF,#20BDFF,#A5FECB)\",\r\n                }}\r\n              >\r\n                <Card.Title className=\"m-0\">My Cart</Card.Title>\r\n              </Card.Header>\r\n              <Card.Body className=\"p-0\">\r\n                {cartItems[0]?.cart?.map((cartItem, index) => {\r\n                  return (\r\n                    <CartItem\r\n                      key={index}\r\n                      cartItem={cartItem}\r\n                      reload={reload}\r\n                      setReload={setReload}\r\n                    />\r\n                  );\r\n                })}\r\n              </Card.Body>\r\n              <Card.Footer\r\n                style={{\r\n                  background: \"linear-gradient(45deg,#5433FF,#20BDFF,#A5FECB)\",\r\n                }}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          <Col lg={4} md={12} sm={12}>\r\n            <Card className=\"cardHover\">\r\n              <Card.Header\r\n                style={{\r\n                  color: \"white\",\r\n                  background: \"linear-gradient(45deg,#5433FF,#20BDFF,#A5FECB)\",\r\n                }}\r\n              >\r\n                <Card.Title className=\"m-0\">Price Details</Card.Title>\r\n              </Card.Header>\r\n\r\n              <Card.Body style={{ lineHeight: \"3\" }}>\r\n                <Row>\r\n                  <Col lg={8} md={6} sm={6} xs={6}>\r\n                    {/* <Card.Text>Price ({cartItemCount()} items)</Card.Text> */}\r\n                    <Card.Text>\r\n                      Price ({cartItems[0]?.cart?.length} items)\r\n                    </Card.Text>\r\n                  </Col>\r\n                  <Col style={{ textAlign: \"right\" }}>\r\n                    <Card.Text>\r\n                      <FaRupeeSign />\r\n                      {getTotalPrice().toLocaleString(\"hi-IN\")}\r\n                    </Card.Text>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col lg={8} md={6} sm={6} xs={6}>\r\n                    <Card.Text>Delivery Charges</Card.Text>\r\n                  </Col>\r\n                  <Col style={{ textAlign: \"right\", color: \"#388e3c\" }}>\r\n                    <Card.Text>FREE</Card.Text>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row className=\"font-weight-bold\">\r\n                  <Col>Total Amount</Col>\r\n                  <Col style={{ textAlign: \"right\" }}>\r\n                    <FaRupeeSign />\r\n                    {getTotalPrice().toLocaleString(\"hi-IN\")}\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                  <Button\r\n                    block\r\n                    className=\"py-3\"\r\n                    style={{\r\n                      margin: \"0 auto\",\r\n                      borderColor: \"white\",\r\n                      color: \"white\",\r\n                      background: \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                    }}\r\n                    onClick={() => {\r\n                      const path = \"/cart/checkout\";\r\n                      if (isAuthenticated()) {\r\n                        history.push(path);\r\n                      } else {\r\n                        history.push(\"/\");\r\n                      }\r\n                    }}\r\n                  >\r\n                    {isAuthenticated() ? \"Checkout\" : \"Signin to checkout.\"}\r\n                  </Button>\r\n                </Row>\r\n              </Card.Body>\r\n\r\n              <Card.Footer\r\n                style={{\r\n                  background: \"linear-gradient(45deg,#5433FF,#20BDFF,#A5FECB)\",\r\n                }}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      {cartContent()}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Cart);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\CartUtility.js",["260","261","262"],"import React, { useState, useEffect } from \"react\";\r\n\r\nexport const cartUtility = (props) => {\r\n  let cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\");\r\n  cartItems.push(props);\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n};\r\n",["263","264"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\cartUtility.js",["265","266","267","268","269"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\cart\\CartItem.js",["270","271"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nimport { getProductImages } from \"../core/helper/imageapicalls\";\r\nimport {\r\n  updateCartItemCount,\r\n  getUniqueItemCount,\r\n  removeCartItem,\r\n} from \"./cartUtility\";\r\nimport { FaMinus, FaPlus, FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst CartItem = (props) => {\r\n  const [numberOfItems, setNumberOfItems] = useState(1);\r\n  useEffect(() => {\r\n    setNumberOfItems(props.cartItem.productDetails.productQuantity);\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Card border=\"light\">\r\n        <Row>\r\n          <Col lg={3} md={3} sm={6} xs={6}>\r\n            <Card.Img\r\n              className=\"d-block mx-auto\"\r\n              style={{ height: \"120px\", width: \"120px\" }}\r\n              src={getProductImages(props.cartItem)}\r\n            />\r\n          </Col>\r\n          <Col lg={5} md={5} sm={6} xs={6}>\r\n            <Card.Body>\r\n              <Card.Text className=\"font-weight-bold\">\r\n                {props.cartItem.productDetails.productName}\r\n              </Card.Text>\r\n              <Card.Text style={{ color: \"grey\" }}>\r\n                {props.cartItem.productDetails.productDescription}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                <FaRupeeSign />{\" \"}\r\n                {(\r\n                  props.cartItem.productDetails.productPrice *\r\n                  props.cartItem.productDetails.productQuantity\r\n                ).toLocaleString(\"hi-IN\")}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Col>\r\n          <Col md={4} sm={12} xs={12}>\r\n            <Row>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-evenly\",\r\n                  marginBottom: \"5px\",\r\n                  paddingTop: \"20px\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <Button\r\n                  disabled={numberOfItems === 1 ? true : false}\r\n                  style={{\r\n                    color: \"white\",\r\n                    background: \"linear-gradient(45deg,#00c6ff,#0072ff)\",\r\n                  }}\r\n                  onClick={() => {\r\n                    if (numberOfItems !== 1) {\r\n                      setNumberOfItems((prevState) => prevState - 1);\r\n                      updateCartItemCount(\r\n                        props.cartItem._id,\r\n                        numberOfItems - 1\r\n                      );\r\n                      props.setReload(!props.reload);\r\n                    } else {\r\n                      setNumberOfItems(1);\r\n                      updateCartItemCount(props.cartItem._id, numberOfItems);\r\n                      props.setReload(!props.reload);\r\n                    }\r\n                  }}\r\n                >\r\n                  <FaMinus />\r\n                </Button>\r\n                <InputGroup style={{ width: \"50px\" }}>\r\n                  <FormControl\r\n                    disabled\r\n                    className=\"text-center\"\r\n                    placeholder={numberOfItems}\r\n                  />\r\n                </InputGroup>\r\n                <Button\r\n                  style={{\r\n                    color: \"white\",\r\n                    background: \"linear-gradient(45deg,#00c6ff,#0072ff)\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setNumberOfItems((prevState) => prevState + 1);\r\n                    updateCartItemCount(props.cartItem._id, numberOfItems + 1);\r\n                    props.setReload(!props.reload);\r\n                  }}\r\n                >\r\n                  <FaPlus />\r\n                </Button>\r\n              </div>\r\n            </Row>\r\n            <Row className=\"my-2 mx-0\">\r\n              <Button\r\n                block\r\n                className=\"px-5 py-2\"\r\n                style={{\r\n                  margin: \"0 auto\",\r\n                  color: \"white\",\r\n                  background: \"linear-gradient(45deg,#FF416C,#FF4B2B)\",\r\n                }}\r\n                variant=\"danger\"\r\n                onClick={() => {\r\n                  props.setReload(!props.reload);\r\n                  removeCartItem(props.cartItem._id);\r\n                }}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\StripeCheckout.js",[],["272","273"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\orderhelper.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\helper\\RazorpayCheckout.js",["274","275","276","277","278","279","280","281"],"import React, { useState, useEffect } from \"react\";\r\nimport TopBar from \"../TopBar\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport { loadAllItems, cartEmpty, getTotalPrice } from \"../../cart/cartUtility\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport Stripe from \"react-stripe-checkout\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { API } from \"../../backend\";\r\nimport { createOrder } from \"./orderhelper\";\r\n\r\nconst RazorpayCheckout = () => {\r\n  const { user } = isAuthenticated();\r\n  console.log(\"USER\", user.name);\r\n  console.log(getTotalPrice());\r\n\r\n  console.log(user);\r\n\r\n  const loadRazorpay = (src) => {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = src;\r\n      document.body.appendChild(script);\r\n      script.onload = () => {\r\n        resolve(true);\r\n      };\r\n      script.onerror = () => {\r\n        resolve(false);\r\n      };\r\n    });\r\n  };\r\n\r\n  const displayRazorpay = async () => {\r\n    const res = await loadRazorpay(\r\n      \"https://checkout.razorpay.com/v1/checkout.js\"\r\n    );\r\n    if (!res) {\r\n      alert(\"Razorpay SDK failed to load\");\r\n    }\r\n\r\n    const options = {\r\n      key: \"rzp_test_4fPfJ2irq7rlsW\", // Enter the Key ID generated from the Dashboard\r\n      amount: getTotalPrice() * 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n      currency: \"INR\",\r\n      name: \"Music Store\",\r\n      description: \"Music Store Test Transaction\",\r\n      image: \"\",\r\n      order_id: \"order_GgYgK8nHxnL7mu\", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n      handler: function (response) {\r\n        alert(response.razorpay_payment_id);\r\n        alert(response.razorpay_order_id);\r\n        alert(response.razorpay_signature);\r\n      },\r\n      prefill: {\r\n        name: user.name,\r\n        email: user.email,\r\n        contact: \"9999999999\",\r\n      },\r\n      notes: {\r\n        address: \"Razorpay Corporate Office\",\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    const paymentObject = new window.Razorpay(options);\r\n    paymentObject.open();\r\n    paymentObject.on(\"payment.failed\", function (response) {\r\n      alert(response.error.code);\r\n      alert(response.error.description);\r\n      alert(response.error.source);\r\n      alert(response.error.step);\r\n      alert(response.error.reason);\r\n      alert(response.error.metadata.order_id);\r\n      alert(response.error.metadata.payment_id);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Button onClick={displayRazorpay}>Pay with Razorpay</Button>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RazorpayCheckout;\r\n",["282","283"],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\CreateCategories.js",["284"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  FormControl,\r\n  InputGroup,\r\n  Button,\r\n  Accordion,\r\n  ListGroup,\r\n  Alert,\r\n  Modal,\r\n  Spinner,\r\n  ListGroupItem,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport {\r\n  createCategory,\r\n  getAllCategories,\r\n  updateCategory,\r\n} from \"./helper/adminapicalls\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nconst CreateCategories = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [categoryName, setCategoryName] = useState({});\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [subCategoryList, setSubCategoryList] = useState([]);\r\n  const [subSuccess, setSubSuccess] = useState(false);\r\n\r\n  const { token, user } = isAuthenticated();\r\n\r\n  useEffect(() => {\r\n    displayAllCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    displayAllCategories();\r\n  }, [reload]);\r\n\r\n  const handleChange = (event) => {\r\n    setError(false);\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    setError(false);\r\n    setSuccess(false);\r\n    if (name === \"\") {\r\n      setError(true);\r\n      setErrorMessage(\"Field cannot be empty\");\r\n    } else {\r\n      createCategory(user._id, token, { name }).then((data) => {\r\n        //console.log(\"DATA\", data);\r\n        if (data.error) {\r\n          setError(true);\r\n          setErrorMessage(data.error);\r\n        } else {\r\n          setCategoryName(data.category);\r\n          //console.log(subCategories, name);\r\n          setError(false);\r\n          setErrorMessage(\"\");\r\n          setSuccess(true);\r\n          setName(\"\");\r\n          setReload(!reload);\r\n          setShow(true);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const displayAllCategories = async () => {\r\n    await getAllCategories().then((data) => {\r\n      if (data.error) {\r\n        //console.log(data.error);\r\n      } else {\r\n        setLoaded(true);\r\n        setCategories(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const displayAccordion = () => {\r\n    return loaded ? (\r\n      <Accordion>\r\n        <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n              All Categories\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <ListGroup>\r\n              {categories.map((category, index) => {\r\n                return (\r\n                  <ListGroup.Item key={index}>{category.name}</ListGroup.Item>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    ) : (\r\n      \"\"\r\n    );\r\n  };\r\n\r\n  const setStateFalse = () => {\r\n    if (error) {\r\n      setTimeout(() => {\r\n        setError(false);\r\n      }, 1500);\r\n    } else if (success) {\r\n      setTimeout(() => {\r\n        setSuccess(false);\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  const onSubmitModal = () => {\r\n    const handleClose = () => {\r\n      setSubSuccess(false);\r\n      setShow(false);\r\n    };\r\n\r\n    const handleOnInputChange = (event) => {\r\n      setSubCategory(event.target.value);\r\n    };\r\n\r\n    //console.log(\"sC\", subCategory);\r\n\r\n    const handleAddSubCategory = () => {\r\n      let arr = new Array();\r\n      arr.push(subCategory);\r\n      setSubCategoryList([...subCategoryList, arr]);\r\n      setSubCategory(\"\");\r\n      //console.log(\"arr\", subCategoryList);\r\n    };\r\n\r\n    const handleSubCategoryDelete = (deletedSubCategory) => {\r\n      setSubCategoryList(\r\n        subCategoryList.filter((x) => {\r\n          return x[0] !== deletedSubCategory;\r\n        })\r\n      );\r\n    };\r\n\r\n    const handleSaveChanges = async () => {\r\n      //console.log(categoryName);\r\n      const updatedCategory = {\r\n        name: categoryName.name,\r\n        subCategories: subCategoryList,\r\n      };\r\n      //console.log(updatedCategory);\r\n      await updateCategory(user._id, categoryName, token, updatedCategory).then(\r\n        (data) => {\r\n          if (data.error) {\r\n            console.log(\"PROMISE ERROR\", data.error);\r\n          } else {\r\n            setSubSuccess(true);\r\n            setSubCategoryList([]);\r\n            //console.log(\"PROMISE RES\", data);\r\n          }\r\n        }\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add sub-category to the category.</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Alert variant=\"success\">\r\n            {subSuccess\r\n              ? `Changes saved successfully.`\r\n              : `Category ${categoryName.name} created successfully.`}\r\n          </Alert>\r\n          <InputGroup>\r\n            <FormControl\r\n              disabled={subSuccess}\r\n              placeholder=\"Enter sub category\"\r\n              onChange={handleOnInputChange}\r\n              value={subCategory}\r\n            />\r\n            <Button disabled={subSuccess} onClick={handleAddSubCategory}>\r\n              Add\r\n            </Button>\r\n          </InputGroup>\r\n          <ListGroup>\r\n            {subCategoryList.length > 0\r\n              ? subCategoryList.map((s, i) => {\r\n                  return (\r\n                    <ListGroupItem key={i}>\r\n                      <Row>\r\n                        <Col lg={9}>{s}</Col>\r\n                        <Col>\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            onClick={() => {\r\n                              handleSubCategoryDelete(s);\r\n                            }}\r\n                          >\r\n                            <FaTrash />\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroupItem>\r\n                  );\r\n                })\r\n              : \"\"}\r\n          </ListGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            disabled={subSuccess}\r\n            variant={subSuccess ? \"success\" : \"primary\"}\r\n            onClick={handleSaveChanges}\r\n          >\r\n            {subSuccess ? `Changes Saved` : `Save Changes`}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const form = () => {\r\n    return (\r\n      <div style={{ lineHeight: \"4\" }}>\r\n        <div>Enter the Category</div>\r\n        {error ? (\r\n          <Alert variant=\"danger\">\r\n            <Spinner animation=\"border\" variant=\"danger\" /> {errorMessage}\r\n            {setStateFalse()}\r\n          </Alert>\r\n        ) : success ? (\r\n          <Alert variant=\"success\">\r\n            <Spinner animation=\"border\" variant=\"success\" /> Category created\r\n            successfully.\r\n            {setStateFalse()}\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <InputGroup>\r\n          <FormControl\r\n            autoFocus\r\n            required\r\n            onChange={handleChange}\r\n            value={name}\r\n            disabled={error || success}\r\n            placeholder=\"for example: Guitar\"\r\n          />\r\n        </InputGroup>\r\n        <div>\r\n          <Button\r\n            variant={error ? \"danger\" : \"primary\"}\r\n            disabled={error || success}\r\n            onClick={onSubmit}\r\n          >\r\n            {error ? `Retry...` : `Create Category`}\r\n          </Button>\r\n        </div>\r\n        <div>{displayAccordion()}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ width: \"100%\", margin: \"1rem\" }} className=\"shadow\">\r\n        <Card.Body>\r\n          <label>\r\n            <h4>Create Categories</h4>\r\n          </label>\r\n          {form()}\r\n        </Card.Body>\r\n        <Card.Footer\r\n          style={{\r\n            background: \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n          }}\r\n        />\r\n      </Card>\r\n      {onSubmitModal()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateCategories;\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\ManageCategories.js",["285","286"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  ListGroup,\r\n  Modal,\r\n  Spinner,\r\n  InputGroup,\r\n  FormControl,\r\n  Alert,\r\n  FormGroup,\r\n  FormLabel,\r\n  ListGroupItem,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport { FaClipboardCheck, FaTrash } from \"react-icons/fa\";\r\nimport {\r\n  getAllCategories,\r\n  updateCategory,\r\n  deleteCategory,\r\n} from \"./helper/adminapicalls\";\r\n\r\nconst ManageCategories = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [updatedCategory, setUpdatedCategory] = useState(\"\");\r\n  const [deletedCategory, setDeletedCategory] = useState(\"\");\r\n  const [toDelete, setToDelete] = useState(false);\r\n  const [toUpdate, setToUpdate] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [secModal, setSecModal] = useState(false);\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [subCategorySelected, setSubCategorySelected] = useState(\"\");\r\n  const [subCategoryToUpdate, setSubCategoryToUpdate] = useState(false);\r\n  const [subCategoryToDelete, setSubCategoryToDelete] = useState(false);\r\n  const [addSubCategory, setAddSubCategory] = useState(false);\r\n\r\n  const { token, user } = isAuthenticated();\r\n\r\n  useEffect(() => {\r\n    displayAllCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    displayAllCategories();\r\n  }, [success]);\r\n\r\n  const displayAllCategories = async () => {\r\n    await getAllCategories().then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setCategories(data);\r\n        setLoaded(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const displayCategoriesList = () => {\r\n    return (\r\n      <ListGroup>\r\n        {loaded\r\n          ? categories.map((category, index) => {\r\n              return (\r\n                <ListGroup.Item key={index}>\r\n                  <Row>\r\n                    <Col lg={6}>{category.name}</Col>\r\n                    <Col\r\n                      lg={6}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        onClick={() => {\r\n                          setUpdatedCategory(category);\r\n                          setToUpdate(true);\r\n                          setShow(true);\r\n                        }}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => {\r\n                          setDeletedCategory(category);\r\n                          setToDelete(true);\r\n                          setShow(true);\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              );\r\n            })\r\n          : \"No categories found, please add a category.\"}\r\n      </ListGroup>\r\n    );\r\n  };\r\n  /*\r\n    *****************************************\r\n    PRIMARY MODAL: TO HANDLE CATEGORY UPDATES\r\n    *****************************************\r\n  */\r\n  const handleUpdateClick = () => {\r\n    const handleClose = () => {\r\n      setSuccess(false);\r\n      setError(false);\r\n      setErrorMessage(\"\");\r\n      setName(\"\");\r\n      setShow(false);\r\n      setToDelete(false);\r\n      setToUpdate(false);\r\n      setSubCategorySelected(\"\");\r\n      setSubCategoryToDelete(false);\r\n      setSubCategoryToUpdate(false);\r\n    };\r\n\r\n    const handleSubCategoryClick = (subCategoryToUpdate) => {\r\n      //console.log(subCategoryToUpdate);\r\n      setSubCategorySelected(subCategoryToUpdate);\r\n    };\r\n\r\n    const handleAddSubCategoryClick = () => {\r\n      setSecModal(true);\r\n      setAddSubCategory(true);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose} size=\"lg\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              {toUpdate ? \"Update Category\" : toDelete ? \"Delete Category\" : \"\"}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {error ? (\r\n              <Alert variant=\"danger\">{errorMessage}</Alert>\r\n            ) : success ? (\r\n              <Alert variant=\"success\">\r\n                Category {toUpdate ? \"updated\" : toDelete ? \"deleted\" : \"\"}{\" \"}\r\n                successfully.\r\n              </Alert>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {toUpdate ? (\r\n              <>\r\n                <InputGroup>\r\n                  <FormControl disabled placeholder={updatedCategory.name} />\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <FormControl\r\n                    placeholder=\"Update category name\"\r\n                    value={name}\r\n                    onChange={(event) => {\r\n                      setName(event.target.value);\r\n                    }}\r\n                  />\r\n                </InputGroup>\r\n                <FormGroup>\r\n                  <FormLabel>Update sub-category</FormLabel>\r\n                  {updatedCategory.subCategories.length > 0 ? (\r\n                    <ListGroup>\r\n                      {updatedCategory.subCategories.map((sub, index) => {\r\n                        return (\r\n                          <ListGroupItem key={index}>\r\n                            <Row>\r\n                              <Col lg={7}>{sub[0]}</Col>\r\n                              <Col>\r\n                                <Button\r\n                                  onClick={() => {\r\n                                    setSecModal(true);\r\n                                    setSubCategoryToUpdate(true);\r\n                                    handleSubCategoryClick(sub[0]);\r\n                                  }}\r\n                                >\r\n                                  <FaClipboardCheck />\r\n                                </Button>\r\n                              </Col>\r\n                              <Col>\r\n                                <Button\r\n                                  variant=\"danger\"\r\n                                  onClick={() => {\r\n                                    setSecModal(true);\r\n                                    setSubCategoryToDelete(true);\r\n                                    handleSubCategoryClick(sub[0]);\r\n                                  }}\r\n                                >\r\n                                  <FaTrash />\r\n                                </Button>\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroupItem>\r\n                        );\r\n                      })}\r\n                    </ListGroup>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </>\r\n            ) : toDelete ? (\r\n              <InputGroup>\r\n                <FormControl disabled placeholder={deletedCategory.name} />\r\n              </InputGroup>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button disabled={success} onClick={handleAddSubCategoryClick}>\r\n              Add sub-category\r\n            </Button>\r\n            {toUpdate ? (\r\n              <Button\r\n                variant=\"primary\"\r\n                disabled={success}\r\n                onClick={handleUpdateSave}\r\n              >\r\n                {success ? \"Changes Saved\" : \"Save Changes\"}\r\n              </Button>\r\n            ) : toDelete ? (\r\n              <Button\r\n                variant=\"danger\"\r\n                disabled={success}\r\n                onClick={handleDeleteSave}\r\n              >\r\n                {success ? \"Category Deleted\" : \"Delete\"}\r\n              </Button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleUpdateSave = async (event) => {\r\n    event.preventDefault();\r\n    if (name === \"\") {\r\n      setError(true);\r\n      setErrorMessage(\"Field cannot be empty\");\r\n    } else {\r\n      const saveCategory = {\r\n        name,\r\n        subCategories: updatedCategory.subCategories,\r\n      };\r\n      await updateCategory(user._id, updatedCategory, token, saveCategory)\r\n        .then((data) => {\r\n          if (data.error) {\r\n            setError(true);\r\n            setErrorMessage(data.error);\r\n          } else {\r\n            //console.log(data);\r\n            setError(false);\r\n            setErrorMessage(\"\");\r\n            setSuccess(true);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n      setName(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteSave = async (event) => {\r\n    event.preventDefault();\r\n    await deleteCategory(user._id, token, deletedCategory)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          //console.log(data);\r\n          setSuccess(true);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  /*\r\n  ***********************************************\r\n  SECONDARY MODAL: TO HANDLE SUB CATEGORY UPDATES\r\n  ***********************************************\r\n  */\r\n  const showSecondaryModal = () => {\r\n    const handleClose = () => {\r\n      setSecModal(false);\r\n      setSubCategory(\"\");\r\n      setAddSubCategory(false);\r\n      setSubCategoryToDelete(false);\r\n      setSubCategoryToUpdate(false);\r\n    };\r\n\r\n    const handleSecModalChange = (event) => {\r\n      setSubCategory(event.target.value);\r\n    };\r\n\r\n    const handleSecModalSaveChanges = () => {\r\n      if (!subCategory.length > 0) {\r\n        setError(true);\r\n        setTimeout(() => {\r\n          setError(false);\r\n        }, 1500);\r\n      } else {\r\n        let saveChanges;\r\n        if (addSubCategory) {\r\n          const subCategoryList = updatedCategory.subCategories;\r\n          const arr = new Array(subCategory);\r\n          subCategoryList.push(arr);\r\n          saveChanges = {\r\n            ...updatedCategory,\r\n            subCategories: subCategoryList,\r\n          };\r\n        } else {\r\n          saveChanges = updatedCategory;\r\n\r\n          saveChanges.subCategories.map((ele) => {\r\n            if (ele[0] === subCategorySelected) {\r\n              ele[0] = subCategory;\r\n            }\r\n          });\r\n        }\r\n        //console.log(saveChanges);\r\n        setSuccess(true);\r\n        setError(false);\r\n        setUpdatedCategory(saveChanges);\r\n        setSubCategory(\"\");\r\n        setTimeout(() => {\r\n          setAddSubCategory(false);\r\n          setSuccess(false);\r\n          setSecModal(false);\r\n          handleClose();\r\n        }, 1500);\r\n      }\r\n    };\r\n\r\n    const handleSecModalDelete = () => {\r\n      const saveChanges = updatedCategory;\r\n\r\n      saveChanges.subCategories = saveChanges.subCategories.filter((ele) => {\r\n        return ele[0] !== subCategorySelected;\r\n      });\r\n\r\n      setUpdatedCategory(saveChanges);\r\n      setSuccess(true);\r\n      setTimeout(() => {\r\n        setSuccess(false);\r\n        setSecModal(false);\r\n        handleClose();\r\n      }, 1500);\r\n    };\r\n\r\n    return (\r\n      <Modal\r\n        show={secModal}\r\n        onHide={handleClose}\r\n        centered={true}\r\n        enforceFocus={true}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {subCategoryToUpdate\r\n              ? \"Update sub-category\"\r\n              : subCategoryToDelete\r\n              ? \"Delete sub-category\"\r\n              : addSubCategory\r\n              ? \"Add sub-category\"\r\n              : \"\"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {error ? <Alert variant=\"danger\">Field cannot be empty!</Alert> : \"\"}\r\n          {subCategoryToUpdate ? (\r\n            <InputGroup>\r\n              <FormControl\r\n                autoFocus\r\n                disabled={error || success}\r\n                placeholder={subCategorySelected}\r\n                value={subCategory}\r\n                onChange={handleSecModalChange}\r\n              />\r\n            </InputGroup>\r\n          ) : subCategoryToDelete ? (\r\n            <InputGroup>\r\n              <FormControl disabled placeholder={subCategorySelected} />\r\n            </InputGroup>\r\n          ) : addSubCategory ? (\r\n            <InputGroup>\r\n              <FormControl\r\n                autoFocus\r\n                disabled={error || success}\r\n                placeholder=\"Enter sub-category name.\"\r\n                value={subCategory}\r\n                onChange={handleSecModalChange}\r\n              />\r\n            </InputGroup>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n\r\n          {subCategoryToUpdate ? (\r\n            <Button\r\n              disabled={error || success}\r\n              variant={error ? \"danger\" : success ? \"success\" : \"primary\"}\r\n              onClick={handleSecModalSaveChanges}\r\n            >\r\n              {error ? (\r\n                <>\r\n                  <Spinner animation=\"grow\" size=\"sm\" /> Retry...\r\n                </>\r\n              ) : success ? (\r\n                <>\r\n                  <Spinner animation=\"grow\" size=\"sm\" /> Saving...\r\n                </>\r\n              ) : (\r\n                `Save Changes`\r\n              )}\r\n            </Button>\r\n          ) : subCategoryToDelete ? (\r\n            <Button\r\n              variant=\"danger\"\r\n              disabled={success}\r\n              onClick={handleSecModalDelete}\r\n            >\r\n              {success ? (\r\n                <>\r\n                  <Spinner animation=\"grow\" size=\"sm\" /> Deleting...\r\n                </>\r\n              ) : (\r\n                `Delete`\r\n              )}\r\n            </Button>\r\n          ) : addSubCategory ? (\r\n            <Button\r\n              disabled={error || success}\r\n              variant={error ? \"danger\" : success ? \"success\" : \"primary\"}\r\n              onClick={handleSecModalSaveChanges}\r\n            >\r\n              {error ? (\r\n                <>\r\n                  <Spinner animation=\"grow\" size=\"sm\" /> Retry...\r\n                </>\r\n              ) : success ? (\r\n                <>\r\n                  <Spinner animation=\"grow\" size=\"sm\" /> Saving...\r\n                </>\r\n              ) : (\r\n                `Save Changes`\r\n              )}\r\n            </Button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const form = () => {\r\n    return (\r\n      <div style={{ lineHeight: \"4\" }}>\r\n        <div>Update and Delete the categories.</div>\r\n        {loaded ? displayCategoriesList() : <Spinner border=\"grow\" />}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ width: \"100%\", margin: \"1rem\" }} className=\"shadow\">\r\n        <Card.Body>\r\n          <label>\r\n            <h4>Manage Categories</h4>\r\n          </label>\r\n          {form()}\r\n        </Card.Body>\r\n        <Card.Footer\r\n          style={{\r\n            background: \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n          }}\r\n        />\r\n      </Card>\r\n      {handleUpdateClick()}\r\n      {showSecondaryModal()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageCategories;\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\CreateProducts.js",["287","288","289","290","291"],"import React, { useState, useEffect } from \"react\";\r\nimport { Alert, Button, Card, Col, Form, Row, Spinner } from \"react-bootstrap\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport { getAllCategories, createProduct } from \"./helper/adminapicalls\";\r\n\r\nconst CreateProducts = () => {\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    formData: \"\",\r\n  });\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    photo,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    formData,\r\n  } = values;\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  const preload = async () => {\r\n    await getAllCategories().then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({ ...values, categories: data, formData: new FormData() });\r\n        subcategories.push(\r\n          categories.map((categoryObj) => categoryObj.subCategories)\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = (name) => (event) => {\r\n    if (event.target.value === \"Select\") return;\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    if (name === \"category\" && event.target.value !== \"Select\") {\r\n      handleSubCategories(event.target.value);\r\n    }\r\n    setValues({ ...values, [name]: value });\r\n    };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n    let data = await createProduct(user._id, token, formData);\r\n    if (data.error) {\r\n      setValues({\r\n        ...values,\r\n        error: data.error,\r\n        loading: false,\r\n      });\r\n    } else {\r\n      setValues({\r\n        ...values,\r\n        name: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        photo: \"\",\r\n        stock: \"\",\r\n        loading: false,\r\n        error: false,\r\n        createdProduct: data.name,\r\n      });\r\n    }\r\n    resetFields();\r\n  };\r\n\r\n  const resetFields = () => {\r\n    document.querySelector(\"#productImage\").value = \"\";\r\n    setTimeout(() => {\r\n      setValues({\r\n        ...values,\r\n        name: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        stock: \"\",\r\n        photo: \"\",\r\n        category: \"\",\r\n        loading: false,\r\n        error: \"\",\r\n        createdProduct: \"\",\r\n        formData: new FormData(),\r\n      });\r\n    }, 2500);\r\n  };\r\n\r\n  const [subCategoryFieldState, setSubCategoryFieldState] = useState(true);\r\n  const [subcategories, setSubcategories] = useState([]);\r\n\r\n  const handleSubCategories = (categoryId) => {\r\n    if (categories.length > 0) {\r\n      categories.map((category) => {\r\n        if (category._id === categoryId) {\r\n          if (category.subCategories.length > 0) {\r\n            setSubcategories(category.subCategories);\r\n            setSubCategoryFieldState(false);\r\n          } else {\r\n            setSubcategories([]);\r\n            setSubCategoryFieldState(true);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const form = () => {\r\n    return (\r\n      <Form>\r\n        {error ? (\r\n          <Alert variant=\"danger\">\r\n            <Spinner animation=\"border\" variant=\"danger\" /> Error: {error}\r\n          </Alert>\r\n        ) : createdProduct ? (\r\n          <Alert variant=\"success\">\r\n            {createdProduct} created successfully.\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Form.Group as={Row}>\r\n          <Col>\r\n            <Form.File\r\n              id=\"productImage\"\r\n              label=\"Product Image\"\r\n              disabled={error}\r\n              accept=\"image/*\"\r\n              onChange={handleChange(\"photo\")}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} controlId=\"productName\">\r\n          <Form.Label column>Name</Form.Label>\r\n          <Col lg={10}>\r\n            <Form.Control\r\n              autoFocus\r\n              disabled={error}\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              onChange={handleChange(\"name\")}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"productDescription\">\r\n          <Form.Label column>Description</Form.Label>\r\n          <Col lg={10}>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              placeholder=\"Description\"\r\n              disabled={error}\r\n              value={description}\r\n              onChange={handleChange(\"description\")}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"productPrice\">\r\n          <Form.Label column>Price</Form.Label>\r\n          <Col lg={10}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Price\"\r\n              value={price}\r\n              disabled={error}\r\n              onChange={handleChange(\"price\")}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} controlId=\"productCategory\">\r\n          <Form.Label column>Category</Form.Label>\r\n          <Col lg={10}>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={handleChange(\"category\")}\r\n              disabled={error}\r\n              value={category}\r\n            >\r\n              <option>Select</option>\r\n              {categories &&\r\n                categories.map((category, index) => {\r\n                  return (\r\n                    <option key={index} value={category._id}>\r\n                      {category.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} controlId=\"productSubCategory\">\r\n          <Form.Label column>Sub-Category</Form.Label>\r\n          <Col lg={10}>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={handleChange(\"subCategory\")}\r\n              disabled={error}\r\n              disabled={subCategoryFieldState}\r\n            >\r\n              <option>Select</option>\r\n              {subcategories &&\r\n                subcategories.map((subcategory, index) => {\r\n                  return (\r\n                    <option key={index} value={subcategory[0]}>\r\n                      {subcategory[0]}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} controlId=\"productQuantity\">\r\n          <Form.Label column>Quantity</Form.Label>\r\n          <Col lg={10}>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Quantity\"\r\n              disabled={error}\r\n              value={stock}\r\n              onChange={handleChange(\"stock\")}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Button\r\n          variant={error ? \"danger\" : \"primary\"}\r\n          type=\"submit\"\r\n          block\r\n          onClick={onSubmit}\r\n        >\r\n          {error ? (\r\n            <>\r\n              <Spinner\r\n                as=\"span\"\r\n                animation=\"grow\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />{\" \"}\r\n              {error} Retry ...\r\n            </>\r\n          ) : (\r\n            \"Create Product\"\r\n          )}\r\n        </Button>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ width: \"100%\", margin: \"1rem\" }} className=\"shadow\">\r\n        <Card.Body>\r\n          <label>\r\n            <h4>Create Products</h4>\r\n          </label>\r\n          {form()}\r\n        </Card.Body>\r\n        <Card.Footer\r\n          style={{\r\n            background: \"linear-gradient(45deg,#12c2e9,#c471ed,#f64f59)\",\r\n          }}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateProducts;\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\ManageProducts.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\ManageOrders.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\admin\\helper\\adminapicalls.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\core\\Brands\\BrandsData.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\ElectricGuitars.js",["292"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst ElectricGuitars = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(products);\r\n  console.log(\"MAP\", productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Electric Guitars\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Electric Guitars\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ElectricGuitars);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\AcousticGuitars.js",["293"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst AcousticGuitars = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Acoustic Guitars\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Acoustic Guitars\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          block\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(AcousticGuitars);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Guitars\\BassGuitars.js",["294"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst BassGuitars = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Bass Guitars\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Bass Guitars\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          block\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(BassGuitars);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Pianos\\Pianos.js",["295"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Pianos = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Pianos\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Pianos\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Pianos);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Microphones\\Microphones.js",["296"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Microphones = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Microphones\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Microphones\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Microphones);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Softwares\\Softwares.js",["297"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Softwares = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Softwares\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Softwares\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Softwares);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Headphones\\Headphones.js",["298"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Headphones = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Headphones\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Headphones\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Headphones);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Amplifiers\\Amplifiers.js",["299"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst Amplifiers = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Amplifiers\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Amplifiers\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Amplifiers);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\Bluetooth Speakers\\BluetoothSpeakers.js",["300"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst BluetoothSpeakers = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Bluetooth Speakers\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"Bluetooth Speakers\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(BluetoothSpeakers);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\pages\\DJ Gear\\DJGear.js",["301"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport HomeBar from \"../../core/HomeBar\";\r\nimport MyCarousel from \"../../core/MyCarousel/MyCarousel\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport { getProducts } from \"../../core/helper/coreapicalls\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getProductImages } from \"../../core/helper/imageapicalls\";\r\nimport { withRouter } from \"react-router\";\r\nimport { isAuthenticated } from \"../../auth/helper\";\r\nimport { addItemtoCart } from \"../../cart/cartUtility\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\n\r\nconst DJGear = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const loadAllProduct = async () => {\r\n    await getProducts()\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.error);\r\n          console.log(error);\r\n        } else {\r\n          setProducts(data);\r\n          console.log(data);\r\n          setDataLoaded(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  const productsMap = new Map();\r\n\r\n  dataLoaded &&\r\n    products.forEach((ele) => {\r\n      let key = [];\r\n      if (productsMap.size === 0) {\r\n        if (ele.subCategory === undefined) {\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else {\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        }\r\n      } else {\r\n        if (\r\n          ele.subCategory === undefined &&\r\n          productsMap.has(ele.category.name)\r\n        ) {\r\n          key.push(...productsMap.get(ele.category.name));\r\n          key.push(ele);\r\n          productsMap.set(ele.category.name, key);\r\n        } else if (productsMap.has(ele.subCategory)) {\r\n          key.push(...productsMap.get(ele.subCategory));\r\n          key.push(ele);\r\n          productsMap.set(ele.subCategory, key);\r\n        } else {\r\n          if (ele.subCategory === undefined) {\r\n            key.push(ele);\r\n            productsMap.set(ele.category.name, key);\r\n          } else {\r\n            key.push(ele);\r\n            productsMap.set(ele.subCategory, key);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  console.log(productsMap);\r\n\r\n  const handleClick = (product) => {\r\n    if (isAuthenticated()) {\r\n      history.push(\"/user/cart\");\r\n      addItemtoCart({ product });\r\n    } else {\r\n      history.push(\"/cart\");\r\n      addItemtoCart({ product });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomeBar />\r\n      <MyCarousel />\r\n      <div className=\"d-block m-5\">\r\n        <h4\r\n          style={{\r\n            padding: \"5px 5px 5px 15px\",\r\n            color: \"white\",\r\n            backgroundImage: \"linear-gradient(to right,#f12711, #f5af19)\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          DJ Gear\r\n        </h4>\r\n      </div>\r\n      {dataLoaded ? (\r\n        <Container>\r\n          <Row>\r\n            {productsMap.get(\"DJ Gear\").map((item) => {\r\n              return (\r\n                <Col lg={3} className=\"p-3 text-center\" key={item._id}>\r\n                  <Card className=\"cardHover\">\r\n                    <Card.Body>\r\n                      {dataLoaded ? (\r\n                        <div\r\n                          style={{\r\n                            width: \"211px\",\r\n                            height: \"211px\",\r\n                            overflow: \"hidden\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <Card.Img\r\n                            variant=\"top\"\r\n                            src={getProductImages(item)}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                      <h6>{dataLoaded ? item.name : <Skeleton />}</h6>\r\n                      <h5 style={{ color: \"#de0101\" }}>\r\n                        <FaRupeeSign />\r\n                        {dataLoaded ? (\r\n                          `${item.price.toLocaleString(\"hi-IN\")}`\r\n                        ) : (\r\n                          <Skeleton />\r\n                        )}\r\n                      </h5>\r\n                      {dataLoaded ? (\r\n                        <Button\r\n                          style={{\r\n                            borderColor: \"white\",\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(45deg,#11998e,#38ef7d)\",\r\n                          }}\r\n                          block\r\n                          onClick={() => {\r\n                            handleClick(item);\r\n                          }}\r\n                        >\r\n                          Add to Card\r\n                        </Button>\r\n                      ) : (\r\n                        <Skeleton />\r\n                      )}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <Row className=\"d-block my-5\">\r\n            <Skeleton />\r\n          </Row>\r\n          <Row\r\n            className=\"p-2\"\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={3}>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Skeleton height={150} width={150} />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                  <Skeleton />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(DJGear);\r\n","C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\user\\helper\\userUtility.js",[],"C:\\Users\\Walk\\Desktop\\Music Store\\front-end\\src\\checkout\\Checkout.js",["302","303","304","305"],{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","severity":1,"message":"311","line":47,"column":10,"nodeType":"312","messageId":"313","endLine":47,"endColumn":15},{"ruleId":"314","severity":1,"message":"315","line":80,"column":6,"nodeType":"316","endLine":80,"endColumn":16,"suggestions":"317"},{"ruleId":"318","severity":1,"message":"319","line":32,"column":27,"nodeType":"320","messageId":"321","endLine":32,"endColumn":29},{"ruleId":"322","severity":1,"message":"323","line":95,"column":17,"nodeType":"324","endLine":99,"endColumn":19},{"ruleId":"310","severity":1,"message":"325","line":6,"column":9,"nodeType":"312","messageId":"313","endLine":6,"endColumn":20},{"ruleId":"326","severity":1,"message":"327","line":56,"column":13,"nodeType":"324","endLine":56,"endColumn":61},{"ruleId":"326","severity":1,"message":"327","line":59,"column":13,"nodeType":"324","endLine":59,"endColumn":61},{"ruleId":"326","severity":1,"message":"327","line":62,"column":13,"nodeType":"324","endLine":62,"endColumn":61},{"ruleId":"326","severity":1,"message":"327","line":65,"column":13,"nodeType":"324","endLine":65,"endColumn":61},{"ruleId":"314","severity":1,"message":"328","line":37,"column":6,"nodeType":"316","endLine":37,"endColumn":8,"suggestions":"329"},{"ruleId":"314","severity":1,"message":"328","line":38,"column":6,"nodeType":"316","endLine":38,"endColumn":8,"suggestions":"330"},{"ruleId":"314","severity":1,"message":"328","line":38,"column":6,"nodeType":"316","endLine":38,"endColumn":8,"suggestions":"331"},{"ruleId":"310","severity":1,"message":"332","line":1,"column":27,"nodeType":"312","messageId":"313","endLine":1,"endColumn":36},{"ruleId":"318","severity":1,"message":"333","line":19,"column":61,"nodeType":"320","messageId":"321","endLine":19,"endColumn":63},{"ruleId":"306","replacedBy":"334"},{"ruleId":"308","replacedBy":"335"},{"ruleId":"310","severity":1,"message":"336","line":15,"column":3,"nodeType":"312","messageId":"313","endLine":15,"endColumn":16},{"ruleId":"314","severity":1,"message":"337","line":79,"column":6,"nodeType":"316","endLine":79,"endColumn":16,"suggestions":"338"},{"ruleId":"310","severity":1,"message":"339","line":20,"column":11,"nodeType":"312","messageId":"313","endLine":20,"endColumn":16},{"ruleId":"310","severity":1,"message":"340","line":20,"column":18,"nodeType":"312","messageId":"313","endLine":20,"endColumn":22},{"ruleId":"310","severity":1,"message":"341","line":1,"column":8,"nodeType":"312","messageId":"313","endLine":1,"endColumn":13},{"ruleId":"310","severity":1,"message":"342","line":1,"column":17,"nodeType":"312","messageId":"313","endLine":1,"endColumn":25},{"ruleId":"310","severity":1,"message":"332","line":1,"column":27,"nodeType":"312","messageId":"313","endLine":1,"endColumn":36},{"ruleId":"306","replacedBy":"343"},{"ruleId":"308","replacedBy":"344"},{"ruleId":"345","severity":1,"message":"346","line":34,"column":42,"nodeType":"347","messageId":"348","endLine":34,"endColumn":44},{"ruleId":"345","severity":1,"message":"346","line":68,"column":45,"nodeType":"347","messageId":"348","endLine":68,"endColumn":47},{"ruleId":"345","severity":1,"message":"346","line":83,"column":40,"nodeType":"347","messageId":"348","endLine":83,"endColumn":42},{"ruleId":"345","severity":1,"message":"346","line":112,"column":42,"nodeType":"347","messageId":"348","endLine":112,"endColumn":44},{"ruleId":"345","severity":1,"message":"346","line":128,"column":38,"nodeType":"347","messageId":"348","endLine":128,"endColumn":40},{"ruleId":"310","severity":1,"message":"349","line":15,"column":3,"nodeType":"312","messageId":"313","endLine":15,"endColumn":21},{"ruleId":"314","severity":1,"message":"350","line":24,"column":6,"nodeType":"316","endLine":24,"endColumn":8,"suggestions":"351"},{"ruleId":"306","replacedBy":"352"},{"ruleId":"308","replacedBy":"353"},{"ruleId":"310","severity":1,"message":"342","line":1,"column":17,"nodeType":"312","messageId":"313","endLine":1,"endColumn":25},{"ruleId":"310","severity":1,"message":"332","line":1,"column":27,"nodeType":"312","messageId":"313","endLine":1,"endColumn":36},{"ruleId":"310","severity":1,"message":"354","line":4,"column":10,"nodeType":"312","messageId":"313","endLine":4,"endColumn":22},{"ruleId":"310","severity":1,"message":"355","line":4,"column":24,"nodeType":"312","messageId":"313","endLine":4,"endColumn":33},{"ruleId":"310","severity":1,"message":"356","line":5,"column":10,"nodeType":"312","messageId":"313","endLine":5,"endColumn":14},{"ruleId":"310","severity":1,"message":"357","line":7,"column":8,"nodeType":"312","messageId":"313","endLine":7,"endColumn":14},{"ruleId":"310","severity":1,"message":"358","line":9,"column":10,"nodeType":"312","messageId":"313","endLine":9,"endColumn":13},{"ruleId":"310","severity":1,"message":"359","line":10,"column":10,"nodeType":"312","messageId":"313","endLine":10,"endColumn":21},{"ruleId":"306","replacedBy":"360"},{"ruleId":"308","replacedBy":"361"},{"ruleId":"362","severity":1,"message":"363","line":141,"column":17,"nodeType":"364","messageId":"365","endLine":141,"endColumn":28},{"ruleId":"310","severity":1,"message":"366","line":16,"column":3,"nodeType":"312","messageId":"313","endLine":16,"endColumn":7},{"ruleId":"345","severity":1,"message":"346","line":332,"column":47,"nodeType":"347","messageId":"348","endLine":332,"endColumn":49},{"ruleId":"310","severity":1,"message":"367","line":28,"column":5,"nodeType":"312","messageId":"313","endLine":28,"endColumn":10},{"ruleId":"310","severity":1,"message":"368","line":31,"column":5,"nodeType":"312","messageId":"313","endLine":31,"endColumn":12},{"ruleId":"314","severity":1,"message":"337","line":39,"column":6,"nodeType":"316","endLine":39,"endColumn":8,"suggestions":"369"},{"ruleId":"345","severity":1,"message":"346","line":114,"column":33,"nodeType":"347","messageId":"348","endLine":114,"endColumn":35},{"ruleId":"370","severity":1,"message":"371","line":222,"column":15,"nodeType":"372","endLine":222,"endColumn":47},{"ruleId":"314","severity":1,"message":"328","line":38,"column":6,"nodeType":"316","endLine":38,"endColumn":8,"suggestions":"373"},{"ruleId":"314","severity":1,"message":"328","line":37,"column":6,"nodeType":"316","endLine":37,"endColumn":8,"suggestions":"374"},{"ruleId":"314","severity":1,"message":"328","line":37,"column":6,"nodeType":"316","endLine":37,"endColumn":8,"suggestions":"375"},{"ruleId":"314","severity":1,"message":"328","line":38,"column":6,"nodeType":"316","endLine":38,"endColumn":8,"suggestions":"376"},{"ruleId":"314","severity":1,"message":"328","line":38,"column":6,"nodeType":"316","endLine":38,"endColumn":8,"suggestions":"377"},{"ruleId":"314","severity":1,"message":"328","line":38,"column":6,"nodeType":"316","endLine":38,"endColumn":8,"suggestions":"378"},{"ruleId":"314","severity":1,"message":"328","line":38,"column":6,"nodeType":"316","endLine":38,"endColumn":8,"suggestions":"379"},{"ruleId":"314","severity":1,"message":"328","line":38,"column":6,"nodeType":"316","endLine":38,"endColumn":8,"suggestions":"380"},{"ruleId":"314","severity":1,"message":"328","line":38,"column":6,"nodeType":"316","endLine":38,"endColumn":8,"suggestions":"381"},{"ruleId":"314","severity":1,"message":"328","line":38,"column":6,"nodeType":"316","endLine":38,"endColumn":8,"suggestions":"382"},{"ruleId":"314","severity":1,"message":"383","line":43,"column":13,"nodeType":"347","endLine":47,"endColumn":4},{"ruleId":"314","severity":1,"message":"384","line":47,"column":6,"nodeType":"316","endLine":47,"endColumn":14,"suggestions":"385"},{"ruleId":"318","severity":1,"message":"319","line":96,"column":40,"nodeType":"320","messageId":"321","endLine":96,"endColumn":42},{"ruleId":"318","severity":1,"message":"319","line":323,"column":38,"nodeType":"320","messageId":"321","endLine":323,"endColumn":40},"no-native-reassign",["386"],"no-negated-in-lhs",["387"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'performRedirect'. Either include it or remove the dependency array.","ArrayExpression",["388"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'handleClick' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'loadAllProduct'. Either include it or remove the dependency array.",["389"],["390"],["391"],"'useEffect' is defined but never used.","Expected '!==' and instead saw '!='.",["386"],["387"],"'ListGroupItem' is defined but never used.","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.",["392"],"'token' is assigned a value but never used.","'user' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.",["386"],["387"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getUniqueItemCount' is defined but never used.","React Hook useEffect has a missing dependency: 'props.cartItem.productDetails.productQuantity'. Either include it or remove the dependency array. If 'setNumberOfItems' needs the current value of 'props.cartItem.productDetails.productQuantity', you can also switch to useReducer instead of useState and read 'props.cartItem.productDetails.productQuantity' in the reducer.",["393"],["386"],["387"],"'loadAllItems' is defined but never used.","'cartEmpty' is defined but never used.","'Link' is defined but never used.","'Stripe' is defined but never used.","'API' is defined but never used.","'createOrder' is defined but never used.",["386"],["387"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'Form' is defined but never used.","'photo' is assigned a value but never used.","'loading' is assigned a value but never used.",["394"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["395"],["396"],["397"],["398"],["399"],["400"],["401"],["402"],["403"],["404"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'token' and 'user._id'. Either include them or remove the dependency array.",["405"],"no-global-assign","no-unsafe-negation",{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"408","fix":"410"},{"desc":"408","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"408","fix":"418"},{"desc":"408","fix":"419"},{"desc":"408","fix":"420"},{"desc":"408","fix":"421"},{"desc":"408","fix":"422"},{"desc":"408","fix":"423"},{"desc":"408","fix":"424"},{"desc":"408","fix":"425"},{"desc":"408","fix":"426"},{"desc":"408","fix":"427"},{"desc":"428","fix":"429"},"Update the dependencies array to be: [performRedirect, redirect]",{"range":"430","text":"431"},"Update the dependencies array to be: [loadAllProduct]",{"range":"432","text":"433"},{"range":"434","text":"433"},{"range":"435","text":"433"},"Update the dependencies array to be: [preload, redirect]",{"range":"436","text":"437"},"Update the dependencies array to be: [props.cartItem.productDetails.productQuantity]",{"range":"438","text":"439"},"Update the dependencies array to be: [preload]",{"range":"440","text":"441"},{"range":"442","text":"433"},{"range":"443","text":"433"},{"range":"444","text":"433"},{"range":"445","text":"433"},{"range":"446","text":"433"},{"range":"447","text":"433"},{"range":"448","text":"433"},{"range":"449","text":"433"},{"range":"450","text":"433"},{"range":"451","text":"433"},"Update the dependencies array to be: [reload, token, user._id]",{"range":"452","text":"453"},[1968,1978],"[performRedirect, redirect]",[1245,1247],"[loadAllProduct]",[1277,1279],[1273,1275],[2658,2668],"[preload, redirect]",[591,593],"[props.cartItem.productDetails.productQuantity]",[828,830],"[preload]",[1283,1285],[1253,1255],[1249,1251],[1274,1276],[1279,1281],[1277,1279],[1278,1280],[1278,1280],[1285,1287],[1274,1276],[1526,1534],"[reload, token, user._id]"]